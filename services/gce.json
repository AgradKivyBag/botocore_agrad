{
  "api_version": "v1beta15", 
  "endpoint_prefix": "compute", 
  "endpoint_url": "https://www.googleapis.com/", 
  "metadata": {}, 
  "operations": {
    "compute.addresses.aggregatedList": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/aggregated/addresses"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.addresses.aggregatedList", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Name of the scope containing this set of addresses.        </p>\n    ", 
                  "members": {
                    "AddressesScopedList": {
                      "members": {
                        "addresses": {
                          "documentation": "\n        <p>\n        List of addresses contained in this scope.        </p>\n    ", 
                          "items": {
                            "members": {
                              "Address": {
                                "members": {
                                  "address": {
                                    "documentation": "\n        <p>\n        The IP address represented by this resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "description": {
                                    "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kind": {
                                    "default": "compute#address", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "annotations": {
                                      "required": [
                                        "compute.addresses.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "warning": {
                          "documentation": "\n        <p>\n        Informational warning which replaces the list of addresses when the list is empty.        </p>\n    ", 
                          "properties": {
                            "code": {
                              "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "data": {
                              "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                              "items": {
                                "properties": {
                                  "key": {
                                    "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": "structure", 
                                  "value": {
                                    "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }, 
                              "type": "list"
                            }, 
                            "message": {
                              "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        A map of scoped address lists.        </p>\n    ", 
                "type": "structure"
              }, 
              "kind": {
                "default": "compute#addressAggregatedList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "AddressAggregatedList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.addresses.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}/addresses/{address}"
      }, 
      "input": {
        "members": {
          "address": {
            "documentation": "\n        <p>\n        Name of the address resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the region scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.addresses.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.addresses.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}/addresses/{address}"
      }, 
      "input": {
        "members": {
          "address": {
            "documentation": "\n        <p>\n        Name of the address resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the region scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.addresses.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "address": {
                "documentation": "\n        <p>\n        The IP address represented by this resource.        </p>\n    ", 
                "type": "string"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#address", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.addresses.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }
            }, 
            "shape_name": "Address", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.addresses.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}/addresses"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "address": {
                "documentation": "\n        <p>\n        The IP address represented by this resource.        </p>\n    ", 
                "type": "string"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#address", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.addresses.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Address", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the region scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.addresses.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.addresses.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}/addresses"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the region scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.addresses.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The address resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Address": {
                      "members": {
                        "address": {
                          "documentation": "\n        <p>\n        The IP address represented by this resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#address", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "compute.addresses.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#addressList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "AddressList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.disks.aggregatedList": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/aggregated/disks"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.disks.aggregatedList", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Name of the scope containing this set of disks.        </p>\n    ", 
                  "members": {
                    "DisksScopedList": {
                      "members": {
                        "disks": {
                          "documentation": "\n        <p>\n        List of disks contained in this scope.        </p>\n    ", 
                          "items": {
                            "members": {
                              "Disk": {
                                "members": {
                                  "description": {
                                    "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kind": {
                                    "default": "compute#disk", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "annotations": {
                                      "required": [
                                        "compute.disks.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                                    "type": "string"
                                  }, 
                                  "options": {
                                    "documentation": "\n        <p>\n        Internal use only.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "sizeGb": {
                                    "documentation": "\n        <p>\n        Size of the persistent disk, specified in GB. This parameter is optional when creating a disk from a disk image or a snapshot, otherwise it is required.        </p>\n    ", 
                                    "format": "int64", 
                                    "type": "string"
                                  }, 
                                  "sourceSnapshot": {
                                    "documentation": "\n        <p>\n        The source snapshot used to create this disk. Once the source snapshot has been deleted from the system, this field will be cleared, and will not be set even if a snapshot with the same name has been re-created.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "sourceSnapshotId": {
                                    "documentation": "\n        <p>\n        The 'id' value of the snapshot used to create this disk. This value may be used to determine whether the disk was created from the current or a previous instance of a given disk snapshot.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "warning": {
                          "documentation": "\n        <p>\n        Informational warning which replaces the list of disks when the list is empty.        </p>\n    ", 
                          "properties": {
                            "code": {
                              "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "data": {
                              "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                              "items": {
                                "properties": {
                                  "key": {
                                    "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": "structure", 
                                  "value": {
                                    "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }, 
                              "type": "list"
                            }, 
                            "message": {
                              "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        A map of scoped disk lists.        </p>\n    ", 
                "type": "structure"
              }, 
              "kind": {
                "default": "compute#diskAggregatedList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "DiskAggregatedList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.disks.createSnapshot": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/disks/{disk}/createSnapshot"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#snapshot", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "sourceDiskId": {
                "documentation": "\n        <p>\n        The 'id' value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Snapshot", 
            "type": "structure"
          }, 
          "disk": {
            "documentation": "\n        <p>\n        Name of the persistent disk resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.disks.createSnapshot", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.disks.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/disks/{disk}"
      }, 
      "input": {
        "members": {
          "disk": {
            "documentation": "\n        <p>\n        Name of the persistent disk resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.disks.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.disks.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/disks/{disk}"
      }, 
      "input": {
        "members": {
          "disk": {
            "documentation": "\n        <p>\n        Name of the persistent disk resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.disks.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#disk", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.disks.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "options": {
                "documentation": "\n        <p>\n        Internal use only.        </p>\n    ", 
                "type": "string"
              }, 
              "sizeGb": {
                "documentation": "\n        <p>\n        Size of the persistent disk, specified in GB. This parameter is optional when creating a disk from a disk image or a snapshot, otherwise it is required.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "sourceSnapshot": {
                "documentation": "\n        <p>\n        The source snapshot used to create this disk. Once the source snapshot has been deleted from the system, this field will be cleared, and will not be set even if a snapshot with the same name has been re-created.        </p>\n    ", 
                "type": "string"
              }, 
              "sourceSnapshotId": {
                "documentation": "\n        <p>\n        The 'id' value of the snapshot used to create this disk. This value may be used to determine whether the disk was created from the current or a previous instance of a given disk snapshot.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Disk", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.disks.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/disks"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#disk", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.disks.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "options": {
                "documentation": "\n        <p>\n        Internal use only.        </p>\n    ", 
                "type": "string"
              }, 
              "sizeGb": {
                "documentation": "\n        <p>\n        Size of the persistent disk, specified in GB. This parameter is optional when creating a disk from a disk image or a snapshot, otherwise it is required.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "sourceSnapshot": {
                "documentation": "\n        <p>\n        The source snapshot used to create this disk. Once the source snapshot has been deleted from the system, this field will be cleared, and will not be set even if a snapshot with the same name has been re-created.        </p>\n    ", 
                "type": "string"
              }, 
              "sourceSnapshotId": {
                "documentation": "\n        <p>\n        The 'id' value of the snapshot used to create this disk. This value may be used to determine whether the disk was created from the current or a previous instance of a given disk snapshot.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Disk", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "sourceImage": {
            "documentation": "\n        <p>\n        Optional. Source image to restore onto a disk.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.disks.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.disks.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/disks"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.disks.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The persistent disk resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Disk": {
                      "members": {
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#disk", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "compute.disks.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }, 
                        "options": {
                          "documentation": "\n        <p>\n        Internal use only.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "sizeGb": {
                          "documentation": "\n        <p>\n        Size of the persistent disk, specified in GB. This parameter is optional when creating a disk from a disk image or a snapshot, otherwise it is required.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "sourceSnapshot": {
                          "documentation": "\n        <p>\n        The source snapshot used to create this disk. Once the source snapshot has been deleted from the system, this field will be cleared, and will not be set even if a snapshot with the same name has been re-created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "sourceSnapshotId": {
                          "documentation": "\n        <p>\n        The 'id' value of the snapshot used to create this disk. This value may be used to determine whether the disk was created from the current or a previous instance of a given disk snapshot.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#diskList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "DiskList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.firewalls.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/firewalls/{firewall}"
      }, 
      "input": {
        "members": {
          "firewall": {
            "documentation": "\n        <p>\n        Name of the firewall resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.firewalls.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.firewalls.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/firewalls/{firewall}"
      }, 
      "input": {
        "members": {
          "firewall": {
            "documentation": "\n        <p>\n        Name of the firewall resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.firewalls.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "allowed": {
                "documentation": "\n        <p>\n        The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.        </p>\n    ", 
                "items": {
                  "properties": {
                    "IPProtocol": {
                      "documentation": "\n        <p>\n        Required; this is the IP protocol that is allowed for this rule. This can either be a well known protocol string (tcp, udp or icmp) or the IP protocol number.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "ports": {
                      "documentation": "\n        <p>\n        An optional list of ports which are allowed. It is an error to specify this for any protocol that isn't UDP or TCP. Each entry must be either an integer or a range. If not specified, connections through any port are allowed.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"] and [\"12345-12349\"].        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#firewall", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "network": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the network to which this firewall is applied; provided by the client when the firewall is created.        </p>\n    ", 
                "type": "string"
              }, 
              "sourceRanges": {
                "documentation": "\n        <p>\n        A list of IP address blocks expressed in CIDR format which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "sourceTags": {
                "documentation": "\n        <p>\n        A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "targetTags": {
                "documentation": "\n        <p>\n        A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed. If no targetTags are specified, the firewall rule applies to all instances on the specified network.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }
            }, 
            "shape_name": "Firewall", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.firewalls.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/firewalls"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "allowed": {
                "documentation": "\n        <p>\n        The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.        </p>\n    ", 
                "items": {
                  "properties": {
                    "IPProtocol": {
                      "documentation": "\n        <p>\n        Required; this is the IP protocol that is allowed for this rule. This can either be a well known protocol string (tcp, udp or icmp) or the IP protocol number.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "ports": {
                      "documentation": "\n        <p>\n        An optional list of ports which are allowed. It is an error to specify this for any protocol that isn't UDP or TCP. Each entry must be either an integer or a range. If not specified, connections through any port are allowed.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"] and [\"12345-12349\"].        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#firewall", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "network": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the network to which this firewall is applied; provided by the client when the firewall is created.        </p>\n    ", 
                "type": "string"
              }, 
              "sourceRanges": {
                "documentation": "\n        <p>\n        A list of IP address blocks expressed in CIDR format which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "sourceTags": {
                "documentation": "\n        <p>\n        A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "targetTags": {
                "documentation": "\n        <p>\n        A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed. If no targetTags are specified, the firewall rule applies to all instances on the specified network.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Firewall", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.firewalls.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.firewalls.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/firewalls"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.firewalls.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The firewall resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Firewall": {
                      "members": {
                        "allowed": {
                          "documentation": "\n        <p>\n        The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.        </p>\n    ", 
                          "items": {
                            "properties": {
                              "IPProtocol": {
                                "documentation": "\n        <p>\n        Required; this is the IP protocol that is allowed for this rule. This can either be a well known protocol string (tcp, udp or icmp) or the IP protocol number.        </p>\n    ", 
                                "type": "string"
                              }, 
                              "ports": {
                                "documentation": "\n        <p>\n        An optional list of ports which are allowed. It is an error to specify this for any protocol that isn't UDP or TCP. Each entry must be either an integer or a range. If not specified, connections through any port are allowed.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"] and [\"12345-12349\"].        </p>\n    ", 
                                "items": {
                                  "type": "string"
                                }, 
                                "type": "list"
                              }, 
                              "type": "structure"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#firewall", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "compute.firewalls.insert", 
                              "compute.firewalls.patch"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }, 
                        "network": {
                          "annotations": {
                            "required": [
                              "compute.firewalls.insert", 
                              "compute.firewalls.patch"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        URL of the network to which this firewall is applied; provided by the client when the firewall is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "sourceRanges": {
                          "documentation": "\n        <p>\n        A list of IP address blocks expressed in CIDR format which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                          "items": {
                            "type": "string"
                          }, 
                          "type": "list"
                        }, 
                        "sourceTags": {
                          "documentation": "\n        <p>\n        A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                          "items": {
                            "type": "string"
                          }, 
                          "type": "list"
                        }, 
                        "targetTags": {
                          "documentation": "\n        <p>\n        A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed. If no targetTags are specified, the firewall rule applies to all instances on the specified network.        </p>\n    ", 
                          "items": {
                            "type": "string"
                          }, 
                          "type": "list"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#firewallList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "FirewallList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.firewalls.patch": {
      "http": {
        "method": "PATCH", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/firewalls/{firewall}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "allowed": {
                "documentation": "\n        <p>\n        The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.        </p>\n    ", 
                "items": {
                  "properties": {
                    "IPProtocol": {
                      "documentation": "\n        <p>\n        Required; this is the IP protocol that is allowed for this rule. This can either be a well known protocol string (tcp, udp or icmp) or the IP protocol number.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "ports": {
                      "documentation": "\n        <p>\n        An optional list of ports which are allowed. It is an error to specify this for any protocol that isn't UDP or TCP. Each entry must be either an integer or a range. If not specified, connections through any port are allowed.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"] and [\"12345-12349\"].        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#firewall", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "network": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the network to which this firewall is applied; provided by the client when the firewall is created.        </p>\n    ", 
                "type": "string"
              }, 
              "sourceRanges": {
                "documentation": "\n        <p>\n        A list of IP address blocks expressed in CIDR format which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "sourceTags": {
                "documentation": "\n        <p>\n        A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "targetTags": {
                "documentation": "\n        <p>\n        A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed. If no targetTags are specified, the firewall rule applies to all instances on the specified network.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Firewall", 
            "type": "structure"
          }, 
          "firewall": {
            "documentation": "\n        <p>\n        Name of the firewall resource to update.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.firewalls.patch", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.firewalls.update": {
      "http": {
        "method": "PUT", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/firewalls/{firewall}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "allowed": {
                "documentation": "\n        <p>\n        The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.        </p>\n    ", 
                "items": {
                  "properties": {
                    "IPProtocol": {
                      "documentation": "\n        <p>\n        Required; this is the IP protocol that is allowed for this rule. This can either be a well known protocol string (tcp, udp or icmp) or the IP protocol number.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "ports": {
                      "documentation": "\n        <p>\n        An optional list of ports which are allowed. It is an error to specify this for any protocol that isn't UDP or TCP. Each entry must be either an integer or a range. If not specified, connections through any port are allowed.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"] and [\"12345-12349\"].        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#firewall", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "network": {
                "annotations": {
                  "required": [
                    "compute.firewalls.insert", 
                    "compute.firewalls.patch"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the network to which this firewall is applied; provided by the client when the firewall is created.        </p>\n    ", 
                "type": "string"
              }, 
              "sourceRanges": {
                "documentation": "\n        <p>\n        A list of IP address blocks expressed in CIDR format which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "sourceTags": {
                "documentation": "\n        <p>\n        A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "targetTags": {
                "documentation": "\n        <p>\n        A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed. If no targetTags are specified, the firewall rule applies to all instances on the specified network.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Firewall", 
            "type": "structure"
          }, 
          "firewall": {
            "documentation": "\n        <p>\n        Name of the firewall resource to update.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.firewalls.update", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.globalOperations.aggregatedList": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/aggregated/operations"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.globalOperations.aggregatedList", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Name of the scope containing this set of operations.        </p>\n    ", 
                  "members": {
                    "OperationsScopedList": {
                      "members": {
                        "operations": {
                          "documentation": "\n        <p>\n        List of operations contained in this scope.        </p>\n    ", 
                          "items": {
                            "members": {
                              "Operation": {
                                "members": {
                                  "kind": {
                                    "default": "compute#operation", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "warning": {
                          "documentation": "\n        <p>\n        Informational warning which replaces the list of operations when the list is empty.        </p>\n    ", 
                          "properties": {
                            "code": {
                              "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "data": {
                              "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                              "items": {
                                "properties": {
                                  "key": {
                                    "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": "structure", 
                                  "value": {
                                    "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }, 
                              "type": "list"
                            }, 
                            "message": {
                              "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        A map of scoped operation lists.        </p>\n    ", 
                "type": "structure"
              }, 
              "kind": {
                "default": "compute#operationAggregatedList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "OperationAggregatedList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.globalOperations.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/operations/{operation}"
      }, 
      "input": {
        "members": {
          "operation": {
            "documentation": "\n        <p>\n        Name of the operation resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.globalOperations.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.globalOperations.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/operations/{operation}"
      }, 
      "input": {
        "members": {
          "operation": {
            "documentation": "\n        <p>\n        Name of the operation resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.globalOperations.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.globalOperations.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/operations"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.globalOperations.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The operation resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Operation": {
                      "members": {
                        "kind": {
                          "default": "compute#operation", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#operationList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "OperationList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.images.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/images/{image}"
      }, 
      "input": {
        "members": {
          "image": {
            "documentation": "\n        <p>\n        Name of the image resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.images.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.images.deprecate": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/images/{image}/deprecate"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "deleted": {
                "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                "type": "string"
              }, 
              "deprecated": {
                "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                "type": "string"
              }, 
              "obsolete": {
                "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                "type": "string"
              }, 
              "replacement": {
                "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                "type": "string"
              }, 
              "state": {
                "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "DeprecationStatus", 
            "type": "structure"
          }, 
          "image": {
            "documentation": "\n        <p>\n        Image name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.images.deprecate", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.images.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/images/{image}"
      }, 
      "input": {
        "members": {
          "image": {
            "documentation": "\n        <p>\n        Name of the image resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.images.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "deprecated": {
                "documentation": "\n        <p>\n        The deprecation status associated with this image.        </p>\n    ", 
                "members": {
                  "DeprecationStatus": {
                    "members": {
                      "deleted": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "deprecated": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "obsolete": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "replacement": {
                        "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "state": {
                        "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "description": {
                "documentation": "\n        <p>\n        Textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#image", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.images.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "preferredKernel": {
                "annotations": {
                  "required": [
                    "compute.images.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        An optional URL of the preferred kernel for use with this disk image. If not specified, a server defined default kernel will be used.        </p>\n    ", 
                "type": "string"
              }, 
              "rawDisk": {
                "documentation": "\n        <p>\n        The raw disk image parameters.        </p>\n    ", 
                "properties": {
                  "containerType": {
                    "default": "TAR", 
                    "documentation": "\n        <p>\n        The format used to encode and transmit the block device. Should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "sha1Checksum": {
                    "documentation": "\n        <p>\n        An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the disk image is created.        </p>\n    ", 
                    "pattern": "[a-f0-9]{40}", 
                    "type": "string"
                  }, 
                  "source": {
                    "annotations": {
                      "required": [
                        "compute.images.insert"
                      ], 
                      "type": "structure"
                    }, 
                    "documentation": "\n        <p>\n        The full Google Cloud Storage URL where the disk image is stored; provided by the client when the disk image is created.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "sourceType": {
                "annotations": {
                  "required": [
                    "compute.images.insert"
                  ], 
                  "type": "structure"
                }, 
                "default": "RAW", 
                "documentation": "\n        <p>\n        Must be \"RAW\"; provided by the client when the disk image is created.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Image", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.images.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/images"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "deprecated": {
                "documentation": "\n        <p>\n        The deprecation status associated with this image.        </p>\n    ", 
                "members": {
                  "DeprecationStatus": {
                    "members": {
                      "deleted": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "deprecated": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "obsolete": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "replacement": {
                        "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "state": {
                        "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "description": {
                "documentation": "\n        <p>\n        Textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#image", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.images.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "preferredKernel": {
                "annotations": {
                  "required": [
                    "compute.images.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        An optional URL of the preferred kernel for use with this disk image. If not specified, a server defined default kernel will be used.        </p>\n    ", 
                "type": "string"
              }, 
              "rawDisk": {
                "documentation": "\n        <p>\n        The raw disk image parameters.        </p>\n    ", 
                "properties": {
                  "containerType": {
                    "default": "TAR", 
                    "documentation": "\n        <p>\n        The format used to encode and transmit the block device. Should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "sha1Checksum": {
                    "documentation": "\n        <p>\n        An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the disk image is created.        </p>\n    ", 
                    "pattern": "[a-f0-9]{40}", 
                    "type": "string"
                  }, 
                  "source": {
                    "annotations": {
                      "required": [
                        "compute.images.insert"
                      ], 
                      "type": "structure"
                    }, 
                    "documentation": "\n        <p>\n        The full Google Cloud Storage URL where the disk image is stored; provided by the client when the disk image is created.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "sourceType": {
                "annotations": {
                  "required": [
                    "compute.images.insert"
                  ], 
                  "type": "structure"
                }, 
                "default": "RAW", 
                "documentation": "\n        <p>\n        Must be \"RAW\"; provided by the client when the disk image is created.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Image", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.images.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/devstorage.read_only"
      ]
    }, 
    "compute.images.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/images"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.images.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The disk image resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Image": {
                      "members": {
                        "deprecated": {
                          "documentation": "\n        <p>\n        The deprecation status associated with this image.        </p>\n    ", 
                          "members": {
                            "DeprecationStatus": {
                              "members": {
                                "deleted": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "deprecated": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "obsolete": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "replacement": {
                                  "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "state": {
                                  "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                                  "type": "string"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        Textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#image", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "compute.images.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }, 
                        "preferredKernel": {
                          "annotations": {
                            "required": [
                              "compute.images.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        An optional URL of the preferred kernel for use with this disk image. If not specified, a server defined default kernel will be used.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "rawDisk": {
                          "documentation": "\n        <p>\n        The raw disk image parameters.        </p>\n    ", 
                          "properties": {
                            "containerType": {
                              "default": "TAR", 
                              "documentation": "\n        <p>\n        The format used to encode and transmit the block device. Should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "sha1Checksum": {
                              "documentation": "\n        <p>\n        An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the disk image is created.        </p>\n    ", 
                              "pattern": "[a-f0-9]{40}", 
                              "type": "string"
                            }, 
                            "source": {
                              "annotations": {
                                "required": [
                                  "compute.images.insert"
                                ], 
                                "type": "structure"
                              }, 
                              "documentation": "\n        <p>\n        The full Google Cloud Storage URL where the disk image is stored; provided by the client when the disk image is created.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }, 
                        "sourceType": {
                          "annotations": {
                            "required": [
                              "compute.images.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "default": "RAW", 
                          "documentation": "\n        <p>\n        Must be \"RAW\"; provided by the client when the disk image is created.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#imageList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ImageList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.instances.addAccessConfig": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}/addAccessConfig"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "kind": {
                "default": "compute#accessConfig", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of this access configuration.        </p>\n    ", 
                "type": "string"
              }, 
              "natIP": {
                "documentation": "\n        <p>\n        An external IP address associated with this instance. Specify an unused static IP address available to the project. If not specified, the external IP will be drawn from a shared ephemeral pool.        </p>\n    ", 
                "type": "string"
              }, 
              "type": {
                "default": "ONE_TO_ONE_NAT", 
                "documentation": "\n        <p>\n        Type of configuration. Must be set to \"ONE_TO_ONE_NAT\". This configures port-for-port NAT to the internet.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "AccessConfig", 
            "type": "structure"
          }, 
          "instance": {
            "documentation": "\n        <p>\n        Instance name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "networkInterface": {
            "documentation": "\n        <p>\n        Network interface name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Project name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.addAccessConfig", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.instances.aggregatedList": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/aggregated/instances"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.aggregatedList", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Name of the scope containing this set of instances.        </p>\n    ", 
                  "members": {
                    "InstancesScopedList": {
                      "members": {
                        "instances": {
                          "documentation": "\n        <p>\n        List of instances contained in this scope.        </p>\n    ", 
                          "items": {
                            "members": {
                              "Instance": {
                                "members": {
                                  "canIpForward": {
                                    "documentation": "\n        <p>\n        Allows this instance to send packets with source IP addresses other than its own and receive packets with destination IP addresses other than its own. If this instance will be used as an IP gateway or it will be set as the next-hop in a Route resource, say true. If unsure, leave this set to false.        </p>\n    ", 
                                    "type": "boolean"
                                  }, 
                                  "description": {
                                    "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "disks": {
                                    "documentation": "\n        <p>\n        Array of disks associated with this instance. Persistent disks must be created before you can assign them.        </p>\n    ", 
                                    "items": {
                                      "members": {
                                        "AttachedDisk": {
                                          "members": {
                                            "boot": {
                                              "documentation": "\n        <p>\n        Indicates that this is a boot disk. VM will use the first partition of the disk for its root filesystem.        </p>\n    ", 
                                              "type": "boolean"
                                            }, 
                                            "deviceName": {
                                              "documentation": "\n        <p>\n        Persistent disk only; must be unique within the instance when specified. This represents a unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance. If not specified, a default will be chosen by the system.        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "kind": {
                                              "default": "compute#attachedDisk", 
                                              "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "mode": {
                                              "documentation": "\n        <p>\n        The mode in which to attach this disk, either \"READ_WRITE\" or \"READ_ONLY\".        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "source": {
                                              "documentation": "\n        <p>\n        Persistent disk only; the URL of the persistent disk resource.        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "type": {
                                              "annotations": {
                                                "required": [
                                                  "compute.instances.insert"
                                                ], 
                                                "type": "structure"
                                              }, 
                                              "documentation": "\n        <p>\n        Type of the disk, either \"SCRATCH\" or \"PERSISTENT\". Note that persistent disks must be created before you can specify them here.        </p>\n    ", 
                                              "type": "string"
                                            }
                                          }, 
                                          "type": "structure"
                                        }
                                      }, 
                                      "type": "structure"
                                    }, 
                                    "type": "list"
                                  }, 
                                  "image": {
                                    "documentation": "\n        <p>\n        An optional URL of the disk image resource to be installed on this instance; provided by the client when the instance is created. Alternatively to passing the image, the client may choose to boot from a persistent disk, by setting boot=true flag on one of the entries in disks[] collection.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kernel": {
                                    "documentation": "\n        <p>\n        URL of the kernel resource to use when booting. In case of booting from persistent disk, this parameter is required. When booting from a disk image, it is optional, but may be provided to use a different kernel than the one associated with the image.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kind": {
                                    "default": "compute#instance", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "machineType": {
                                    "annotations": {
                                      "required": [
                                        "compute.instances.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        URL of the machine type resource describing which machine type to use to host the instance; provided by the client when the instance is created.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "metadata": {
                                    "documentation": "\n        <p>\n        Metadata key/value pairs assigned to this instance. Consists of custom metadata or predefined keys; see Instance documentation for more information.        </p>\n    ", 
                                    "members": {
                                      "Metadata": {
                                        "members": {
                                          "fingerprint": {
                                            "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.        </p>\n    ", 
                                            "format": "byte", 
                                            "type": "string"
                                          }, 
                                          "items": {
                                            "documentation": "\n        <p>\n        Array of key/value pairs. The total size of all keys and values must be less than 512 KB.        </p>\n    ", 
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "annotations": {
                                                    "required": [
                                                      "compute.instances.insert", 
                                                      "compute.projects.setCommonInstanceMetadata"
                                                    ], 
                                                    "type": "structure"
                                                  }, 
                                                  "documentation": "\n        <p>\n        Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.        </p>\n    ", 
                                                  "pattern": "[a-zA-Z0-9-_]{1,128}", 
                                                  "type": "string"
                                                }, 
                                                "type": "structure", 
                                                "value": {
                                                  "annotations": {
                                                    "required": [
                                                      "compute.instances.insert", 
                                                      "compute.projects.setCommonInstanceMetadata"
                                                    ], 
                                                    "type": "structure"
                                                  }, 
                                                  "documentation": "\n        <p>\n        Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.        </p>\n    ", 
                                                  "type": "string"
                                                }
                                              }, 
                                              "type": "structure"
                                            }, 
                                            "type": "list"
                                          }, 
                                          "kind": {
                                            "default": "compute#metadata", 
                                            "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                            "type": "string"
                                          }
                                        }, 
                                        "type": "structure"
                                      }
                                    }, 
                                    "type": "structure"
                                  }, 
                                  "name": {
                                    "annotations": {
                                      "required": [
                                        "compute.instances.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                                    "type": "string"
                                  }, 
                                  "networkInterfaces": {
                                    "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                                    "items": {
                                      "members": {
                                        "NetworkInterface": {
                                          "members": {
                                            "accessConfigs": {
                                              "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                                              "items": {
                                                "members": {
                                                  "AccessConfig": {
                                                    "members": {
                                                      "kind": {
                                                        "default": "compute#accessConfig", 
                                                        "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                                        "type": "string"
                                                      }, 
                                                      "name": {
                                                        "documentation": "\n        <p>\n        Name of this access configuration.        </p>\n    ", 
                                                        "type": "string"
                                                      }, 
                                                      "natIP": {
                                                        "documentation": "\n        <p>\n        An external IP address associated with this instance. Specify an unused static IP address available to the project. If not specified, the external IP will be drawn from a shared ephemeral pool.        </p>\n    ", 
                                                        "type": "string"
                                                      }, 
                                                      "type": {
                                                        "default": "ONE_TO_ONE_NAT", 
                                                        "documentation": "\n        <p>\n        Type of configuration. Must be set to \"ONE_TO_ONE_NAT\". This configures port-for-port NAT to the internet.        </p>\n    ", 
                                                        "type": "string"
                                                      }
                                                    }, 
                                                    "type": "structure"
                                                  }
                                                }, 
                                                "type": "structure"
                                              }, 
                                              "type": "list"
                                            }, 
                                            "network": {
                                              "annotations": {
                                                "required": [
                                                  "compute.instances.insert"
                                                ], 
                                                "type": "structure"
                                              }, 
                                              "documentation": "\n        <p>\n        URL of the network resource attached to this interface.        </p>\n    ", 
                                              "type": "string"
                                            }
                                          }, 
                                          "type": "structure"
                                        }
                                      }, 
                                      "type": "structure"
                                    }, 
                                    "type": "list"
                                  }, 
                                  "serviceAccounts": {
                                    "documentation": "\n        <p>\n        A list of service accounts each with specified scopes, for which access tokens are to be made available to the instance through metadata queries.        </p>\n    ", 
                                    "items": {
                                      "members": {
                                        "ServiceAccount": {
                                          "members": {
                                            "email": {
                                              "documentation": "\n        <p>\n        Email address of the service account.        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "scopes": {
                                              "documentation": "\n        <p>\n        The list of scopes to be made available for this service account.        </p>\n    ", 
                                              "items": {
                                                "type": "string"
                                              }, 
                                              "type": "list"
                                            }
                                          }, 
                                          "type": "structure"
                                        }
                                      }, 
                                      "type": "structure"
                                    }, 
                                    "type": "list"
                                  }, 
                                  "tags": {
                                    "documentation": "\n        <p>\n        A list of tags to be applied to this instance. Used to identify valid sources or targets for network firewalls. Provided by the client on instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.        </p>\n    ", 
                                    "members": {
                                      "Tags": {
                                        "members": {
                                          "fingerprint": {
                                            "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the tags stored in this object. This field is used optimistic locking. An up-to-date tags fingerprint must be provided in order to modify tags.        </p>\n    ", 
                                            "format": "byte", 
                                            "type": "string"
                                          }, 
                                          "items": {
                                            "documentation": "\n        <p>\n        An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                                            "items": {
                                              "type": "string"
                                            }, 
                                            "type": "list"
                                          }
                                        }, 
                                        "type": "structure"
                                      }
                                    }, 
                                    "type": "structure"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "warning": {
                          "documentation": "\n        <p>\n        Informational warning which replaces the list of instances when the list is empty.        </p>\n    ", 
                          "properties": {
                            "code": {
                              "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "data": {
                              "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                              "items": {
                                "properties": {
                                  "key": {
                                    "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": "structure", 
                                  "value": {
                                    "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }, 
                              "type": "list"
                            }, 
                            "message": {
                              "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        A map of scoped instance lists.        </p>\n    ", 
                "type": "structure"
              }, 
              "kind": {
                "default": "compute#instanceAggregatedList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "InstanceAggregatedList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.instances.attachDisk": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}/attachDisk"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "boot": {
                "documentation": "\n        <p>\n        Indicates that this is a boot disk. VM will use the first partition of the disk for its root filesystem.        </p>\n    ", 
                "type": "boolean"
              }, 
              "deviceName": {
                "documentation": "\n        <p>\n        Persistent disk only; must be unique within the instance when specified. This represents a unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance. If not specified, a default will be chosen by the system.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#attachedDisk", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "mode": {
                "documentation": "\n        <p>\n        The mode in which to attach this disk, either \"READ_WRITE\" or \"READ_ONLY\".        </p>\n    ", 
                "type": "string"
              }, 
              "source": {
                "documentation": "\n        <p>\n        Persistent disk only; the URL of the persistent disk resource.        </p>\n    ", 
                "type": "string"
              }, 
              "type": {
                "annotations": {
                  "required": [
                    "compute.instances.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Type of the disk, either \"SCRATCH\" or \"PERSISTENT\". Note that persistent disks must be created before you can specify them here.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "AttachedDisk", 
            "type": "structure"
          }, 
          "instance": {
            "documentation": "\n        <p>\n        Instance name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Project name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.attachDisk", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.instances.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}"
      }, 
      "input": {
        "members": {
          "instance": {
            "documentation": "\n        <p>\n        Name of the instance resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.instances.deleteAccessConfig": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig"
      }, 
      "input": {
        "members": {
          "accessConfig": {
            "documentation": "\n        <p>\n        Access config name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "instance": {
            "documentation": "\n        <p>\n        Instance name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "networkInterface": {
            "documentation": "\n        <p>\n        Network interface name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Project name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.deleteAccessConfig", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.instances.detachDisk": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}/detachDisk"
      }, 
      "input": {
        "members": {
          "deviceName": {
            "documentation": "\n        <p>\n        Disk device name to detach.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "instance": {
            "documentation": "\n        <p>\n        Instance name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Project name.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.detachDisk", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.instances.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}"
      }, 
      "input": {
        "members": {
          "instance": {
            "documentation": "\n        <p>\n        Name of the instance resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "canIpForward": {
                "documentation": "\n        <p>\n        Allows this instance to send packets with source IP addresses other than its own and receive packets with destination IP addresses other than its own. If this instance will be used as an IP gateway or it will be set as the next-hop in a Route resource, say true. If unsure, leave this set to false.        </p>\n    ", 
                "type": "boolean"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "disks": {
                "documentation": "\n        <p>\n        Array of disks associated with this instance. Persistent disks must be created before you can assign them.        </p>\n    ", 
                "items": {
                  "members": {
                    "AttachedDisk": {
                      "members": {
                        "boot": {
                          "documentation": "\n        <p>\n        Indicates that this is a boot disk. VM will use the first partition of the disk for its root filesystem.        </p>\n    ", 
                          "type": "boolean"
                        }, 
                        "deviceName": {
                          "documentation": "\n        <p>\n        Persistent disk only; must be unique within the instance when specified. This represents a unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance. If not specified, a default will be chosen by the system.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#attachedDisk", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "mode": {
                          "documentation": "\n        <p>\n        The mode in which to attach this disk, either \"READ_WRITE\" or \"READ_ONLY\".        </p>\n    ", 
                          "type": "string"
                        }, 
                        "source": {
                          "documentation": "\n        <p>\n        Persistent disk only; the URL of the persistent disk resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "type": {
                          "annotations": {
                            "required": [
                              "compute.instances.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Type of the disk, either \"SCRATCH\" or \"PERSISTENT\". Note that persistent disks must be created before you can specify them here.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "image": {
                "documentation": "\n        <p>\n        An optional URL of the disk image resource to be installed on this instance; provided by the client when the instance is created. Alternatively to passing the image, the client may choose to boot from a persistent disk, by setting boot=true flag on one of the entries in disks[] collection.        </p>\n    ", 
                "type": "string"
              }, 
              "kernel": {
                "documentation": "\n        <p>\n        URL of the kernel resource to use when booting. In case of booting from persistent disk, this parameter is required. When booting from a disk image, it is optional, but may be provided to use a different kernel than the one associated with the image.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#instance", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "machineType": {
                "annotations": {
                  "required": [
                    "compute.instances.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the machine type resource describing which machine type to use to host the instance; provided by the client when the instance is created.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "documentation": "\n        <p>\n        Metadata key/value pairs assigned to this instance. Consists of custom metadata or predefined keys; see Instance documentation for more information.        </p>\n    ", 
                "members": {
                  "Metadata": {
                    "members": {
                      "fingerprint": {
                        "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.        </p>\n    ", 
                        "format": "byte", 
                        "type": "string"
                      }, 
                      "items": {
                        "documentation": "\n        <p>\n        Array of key/value pairs. The total size of all keys and values must be less than 512 KB.        </p>\n    ", 
                        "items": {
                          "properties": {
                            "key": {
                              "annotations": {
                                "required": [
                                  "compute.instances.insert", 
                                  "compute.projects.setCommonInstanceMetadata"
                                ], 
                                "type": "structure"
                              }, 
                              "documentation": "\n        <p>\n        Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.        </p>\n    ", 
                              "pattern": "[a-zA-Z0-9-_]{1,128}", 
                              "type": "string"
                            }, 
                            "type": "structure", 
                            "value": {
                              "annotations": {
                                "required": [
                                  "compute.instances.insert", 
                                  "compute.projects.setCommonInstanceMetadata"
                                ], 
                                "type": "structure"
                              }, 
                              "documentation": "\n        <p>\n        Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.        </p>\n    ", 
                              "type": "string"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "type": "list"
                      }, 
                      "kind": {
                        "default": "compute#metadata", 
                        "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.instances.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "networkInterfaces": {
                "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                "items": {
                  "members": {
                    "NetworkInterface": {
                      "members": {
                        "accessConfigs": {
                          "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                          "items": {
                            "members": {
                              "AccessConfig": {
                                "members": {
                                  "kind": {
                                    "default": "compute#accessConfig", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "documentation": "\n        <p>\n        Name of this access configuration.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "natIP": {
                                    "documentation": "\n        <p>\n        An external IP address associated with this instance. Specify an unused static IP address available to the project. If not specified, the external IP will be drawn from a shared ephemeral pool.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": {
                                    "default": "ONE_TO_ONE_NAT", 
                                    "documentation": "\n        <p>\n        Type of configuration. Must be set to \"ONE_TO_ONE_NAT\". This configures port-for-port NAT to the internet.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "network": {
                          "annotations": {
                            "required": [
                              "compute.instances.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        URL of the network resource attached to this interface.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "serviceAccounts": {
                "documentation": "\n        <p>\n        A list of service accounts each with specified scopes, for which access tokens are to be made available to the instance through metadata queries.        </p>\n    ", 
                "items": {
                  "members": {
                    "ServiceAccount": {
                      "members": {
                        "email": {
                          "documentation": "\n        <p>\n        Email address of the service account.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "scopes": {
                          "documentation": "\n        <p>\n        The list of scopes to be made available for this service account.        </p>\n    ", 
                          "items": {
                            "type": "string"
                          }, 
                          "type": "list"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "tags": {
                "documentation": "\n        <p>\n        A list of tags to be applied to this instance. Used to identify valid sources or targets for network firewalls. Provided by the client on instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.        </p>\n    ", 
                "members": {
                  "Tags": {
                    "members": {
                      "fingerprint": {
                        "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the tags stored in this object. This field is used optimistic locking. An up-to-date tags fingerprint must be provided in order to modify tags.        </p>\n    ", 
                        "format": "byte", 
                        "type": "string"
                      }, 
                      "items": {
                        "documentation": "\n        <p>\n        An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                        "items": {
                          "type": "string"
                        }, 
                        "type": "list"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }
            }, 
            "shape_name": "Instance", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.instances.getSerialPortOutput": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}/serialPort"
      }, 
      "input": {
        "members": {
          "instance": {
            "documentation": "\n        <p>\n        Name of the instance scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.getSerialPortOutput", 
      "output": {
        "members": {
          "response": {
            "members": {
              "contents": {
                "documentation": "\n        <p>\n        The contents of the console output.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#serialPortOutput", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "SerialPortOutput", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.instances.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "canIpForward": {
                "documentation": "\n        <p>\n        Allows this instance to send packets with source IP addresses other than its own and receive packets with destination IP addresses other than its own. If this instance will be used as an IP gateway or it will be set as the next-hop in a Route resource, say true. If unsure, leave this set to false.        </p>\n    ", 
                "type": "boolean"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "disks": {
                "documentation": "\n        <p>\n        Array of disks associated with this instance. Persistent disks must be created before you can assign them.        </p>\n    ", 
                "items": {
                  "members": {
                    "AttachedDisk": {
                      "members": {
                        "boot": {
                          "documentation": "\n        <p>\n        Indicates that this is a boot disk. VM will use the first partition of the disk for its root filesystem.        </p>\n    ", 
                          "type": "boolean"
                        }, 
                        "deviceName": {
                          "documentation": "\n        <p>\n        Persistent disk only; must be unique within the instance when specified. This represents a unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance. If not specified, a default will be chosen by the system.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#attachedDisk", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "mode": {
                          "documentation": "\n        <p>\n        The mode in which to attach this disk, either \"READ_WRITE\" or \"READ_ONLY\".        </p>\n    ", 
                          "type": "string"
                        }, 
                        "source": {
                          "documentation": "\n        <p>\n        Persistent disk only; the URL of the persistent disk resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "type": {
                          "annotations": {
                            "required": [
                              "compute.instances.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Type of the disk, either \"SCRATCH\" or \"PERSISTENT\". Note that persistent disks must be created before you can specify them here.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "image": {
                "documentation": "\n        <p>\n        An optional URL of the disk image resource to be installed on this instance; provided by the client when the instance is created. Alternatively to passing the image, the client may choose to boot from a persistent disk, by setting boot=true flag on one of the entries in disks[] collection.        </p>\n    ", 
                "type": "string"
              }, 
              "kernel": {
                "documentation": "\n        <p>\n        URL of the kernel resource to use when booting. In case of booting from persistent disk, this parameter is required. When booting from a disk image, it is optional, but may be provided to use a different kernel than the one associated with the image.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#instance", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "machineType": {
                "annotations": {
                  "required": [
                    "compute.instances.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the machine type resource describing which machine type to use to host the instance; provided by the client when the instance is created.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "documentation": "\n        <p>\n        Metadata key/value pairs assigned to this instance. Consists of custom metadata or predefined keys; see Instance documentation for more information.        </p>\n    ", 
                "members": {
                  "Metadata": {
                    "members": {
                      "fingerprint": {
                        "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.        </p>\n    ", 
                        "format": "byte", 
                        "type": "string"
                      }, 
                      "items": {
                        "documentation": "\n        <p>\n        Array of key/value pairs. The total size of all keys and values must be less than 512 KB.        </p>\n    ", 
                        "items": {
                          "properties": {
                            "key": {
                              "annotations": {
                                "required": [
                                  "compute.instances.insert", 
                                  "compute.projects.setCommonInstanceMetadata"
                                ], 
                                "type": "structure"
                              }, 
                              "documentation": "\n        <p>\n        Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.        </p>\n    ", 
                              "pattern": "[a-zA-Z0-9-_]{1,128}", 
                              "type": "string"
                            }, 
                            "type": "structure", 
                            "value": {
                              "annotations": {
                                "required": [
                                  "compute.instances.insert", 
                                  "compute.projects.setCommonInstanceMetadata"
                                ], 
                                "type": "structure"
                              }, 
                              "documentation": "\n        <p>\n        Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.        </p>\n    ", 
                              "type": "string"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "type": "list"
                      }, 
                      "kind": {
                        "default": "compute#metadata", 
                        "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.instances.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "networkInterfaces": {
                "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                "items": {
                  "members": {
                    "NetworkInterface": {
                      "members": {
                        "accessConfigs": {
                          "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                          "items": {
                            "members": {
                              "AccessConfig": {
                                "members": {
                                  "kind": {
                                    "default": "compute#accessConfig", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "documentation": "\n        <p>\n        Name of this access configuration.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "natIP": {
                                    "documentation": "\n        <p>\n        An external IP address associated with this instance. Specify an unused static IP address available to the project. If not specified, the external IP will be drawn from a shared ephemeral pool.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": {
                                    "default": "ONE_TO_ONE_NAT", 
                                    "documentation": "\n        <p>\n        Type of configuration. Must be set to \"ONE_TO_ONE_NAT\". This configures port-for-port NAT to the internet.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "network": {
                          "annotations": {
                            "required": [
                              "compute.instances.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        URL of the network resource attached to this interface.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "serviceAccounts": {
                "documentation": "\n        <p>\n        A list of service accounts each with specified scopes, for which access tokens are to be made available to the instance through metadata queries.        </p>\n    ", 
                "items": {
                  "members": {
                    "ServiceAccount": {
                      "members": {
                        "email": {
                          "documentation": "\n        <p>\n        Email address of the service account.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "scopes": {
                          "documentation": "\n        <p>\n        The list of scopes to be made available for this service account.        </p>\n    ", 
                          "items": {
                            "type": "string"
                          }, 
                          "type": "list"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "tags": {
                "documentation": "\n        <p>\n        A list of tags to be applied to this instance. Used to identify valid sources or targets for network firewalls. Provided by the client on instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.        </p>\n    ", 
                "members": {
                  "Tags": {
                    "members": {
                      "fingerprint": {
                        "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the tags stored in this object. This field is used optimistic locking. An up-to-date tags fingerprint must be provided in order to modify tags.        </p>\n    ", 
                        "format": "byte", 
                        "type": "string"
                      }, 
                      "items": {
                        "documentation": "\n        <p>\n        An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                        "items": {
                          "type": "string"
                        }, 
                        "type": "list"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Instance", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.instances.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        A list of instance resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Instance": {
                      "members": {
                        "canIpForward": {
                          "documentation": "\n        <p>\n        Allows this instance to send packets with source IP addresses other than its own and receive packets with destination IP addresses other than its own. If this instance will be used as an IP gateway or it will be set as the next-hop in a Route resource, say true. If unsure, leave this set to false.        </p>\n    ", 
                          "type": "boolean"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "disks": {
                          "documentation": "\n        <p>\n        Array of disks associated with this instance. Persistent disks must be created before you can assign them.        </p>\n    ", 
                          "items": {
                            "members": {
                              "AttachedDisk": {
                                "members": {
                                  "boot": {
                                    "documentation": "\n        <p>\n        Indicates that this is a boot disk. VM will use the first partition of the disk for its root filesystem.        </p>\n    ", 
                                    "type": "boolean"
                                  }, 
                                  "deviceName": {
                                    "documentation": "\n        <p>\n        Persistent disk only; must be unique within the instance when specified. This represents a unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance. If not specified, a default will be chosen by the system.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kind": {
                                    "default": "compute#attachedDisk", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "mode": {
                                    "documentation": "\n        <p>\n        The mode in which to attach this disk, either \"READ_WRITE\" or \"READ_ONLY\".        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "source": {
                                    "documentation": "\n        <p>\n        Persistent disk only; the URL of the persistent disk resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": {
                                    "annotations": {
                                      "required": [
                                        "compute.instances.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        Type of the disk, either \"SCRATCH\" or \"PERSISTENT\". Note that persistent disks must be created before you can specify them here.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "image": {
                          "documentation": "\n        <p>\n        An optional URL of the disk image resource to be installed on this instance; provided by the client when the instance is created. Alternatively to passing the image, the client may choose to boot from a persistent disk, by setting boot=true flag on one of the entries in disks[] collection.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kernel": {
                          "documentation": "\n        <p>\n        URL of the kernel resource to use when booting. In case of booting from persistent disk, this parameter is required. When booting from a disk image, it is optional, but may be provided to use a different kernel than the one associated with the image.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#instance", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "machineType": {
                          "annotations": {
                            "required": [
                              "compute.instances.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        URL of the machine type resource describing which machine type to use to host the instance; provided by the client when the instance is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "metadata": {
                          "documentation": "\n        <p>\n        Metadata key/value pairs assigned to this instance. Consists of custom metadata or predefined keys; see Instance documentation for more information.        </p>\n    ", 
                          "members": {
                            "Metadata": {
                              "members": {
                                "fingerprint": {
                                  "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.        </p>\n    ", 
                                  "format": "byte", 
                                  "type": "string"
                                }, 
                                "items": {
                                  "documentation": "\n        <p>\n        Array of key/value pairs. The total size of all keys and values must be less than 512 KB.        </p>\n    ", 
                                  "items": {
                                    "properties": {
                                      "key": {
                                        "annotations": {
                                          "required": [
                                            "compute.instances.insert", 
                                            "compute.projects.setCommonInstanceMetadata"
                                          ], 
                                          "type": "structure"
                                        }, 
                                        "documentation": "\n        <p>\n        Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.        </p>\n    ", 
                                        "pattern": "[a-zA-Z0-9-_]{1,128}", 
                                        "type": "string"
                                      }, 
                                      "type": "structure", 
                                      "value": {
                                        "annotations": {
                                          "required": [
                                            "compute.instances.insert", 
                                            "compute.projects.setCommonInstanceMetadata"
                                          ], 
                                          "type": "structure"
                                        }, 
                                        "documentation": "\n        <p>\n        Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.        </p>\n    ", 
                                        "type": "string"
                                      }
                                    }, 
                                    "type": "structure"
                                  }, 
                                  "type": "list"
                                }, 
                                "kind": {
                                  "default": "compute#metadata", 
                                  "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                  "type": "string"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "compute.instances.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }, 
                        "networkInterfaces": {
                          "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                          "items": {
                            "members": {
                              "NetworkInterface": {
                                "members": {
                                  "accessConfigs": {
                                    "documentation": "\n        <p>\n        Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.        </p>\n    ", 
                                    "items": {
                                      "members": {
                                        "AccessConfig": {
                                          "members": {
                                            "kind": {
                                              "default": "compute#accessConfig", 
                                              "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "name": {
                                              "documentation": "\n        <p>\n        Name of this access configuration.        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "natIP": {
                                              "documentation": "\n        <p>\n        An external IP address associated with this instance. Specify an unused static IP address available to the project. If not specified, the external IP will be drawn from a shared ephemeral pool.        </p>\n    ", 
                                              "type": "string"
                                            }, 
                                            "type": {
                                              "default": "ONE_TO_ONE_NAT", 
                                              "documentation": "\n        <p>\n        Type of configuration. Must be set to \"ONE_TO_ONE_NAT\". This configures port-for-port NAT to the internet.        </p>\n    ", 
                                              "type": "string"
                                            }
                                          }, 
                                          "type": "structure"
                                        }
                                      }, 
                                      "type": "structure"
                                    }, 
                                    "type": "list"
                                  }, 
                                  "network": {
                                    "annotations": {
                                      "required": [
                                        "compute.instances.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        URL of the network resource attached to this interface.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "serviceAccounts": {
                          "documentation": "\n        <p>\n        A list of service accounts each with specified scopes, for which access tokens are to be made available to the instance through metadata queries.        </p>\n    ", 
                          "items": {
                            "members": {
                              "ServiceAccount": {
                                "members": {
                                  "email": {
                                    "documentation": "\n        <p>\n        Email address of the service account.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "scopes": {
                                    "documentation": "\n        <p>\n        The list of scopes to be made available for this service account.        </p>\n    ", 
                                    "items": {
                                      "type": "string"
                                    }, 
                                    "type": "list"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "tags": {
                          "documentation": "\n        <p>\n        A list of tags to be applied to this instance. Used to identify valid sources or targets for network firewalls. Provided by the client on instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.        </p>\n    ", 
                          "members": {
                            "Tags": {
                              "members": {
                                "fingerprint": {
                                  "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the tags stored in this object. This field is used optimistic locking. An up-to-date tags fingerprint must be provided in order to modify tags.        </p>\n    ", 
                                  "format": "byte", 
                                  "type": "string"
                                }, 
                                "items": {
                                  "documentation": "\n        <p>\n        An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                                  "items": {
                                    "type": "string"
                                  }, 
                                  "type": "list"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#instanceList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "InstanceList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.instances.setMetadata": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}/setMetadata"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "fingerprint": {
                "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.        </p>\n    ", 
                "format": "byte", 
                "type": "string"
              }, 
              "items": {
                "documentation": "\n        <p>\n        Array of key/value pairs. The total size of all keys and values must be less than 512 KB.        </p>\n    ", 
                "items": {
                  "properties": {
                    "key": {
                      "annotations": {
                        "required": [
                          "compute.instances.insert", 
                          "compute.projects.setCommonInstanceMetadata"
                        ], 
                        "type": "structure"
                      }, 
                      "documentation": "\n        <p>\n        Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.        </p>\n    ", 
                      "pattern": "[a-zA-Z0-9-_]{1,128}", 
                      "type": "string"
                    }, 
                    "type": "structure", 
                    "value": {
                      "annotations": {
                        "required": [
                          "compute.instances.insert", 
                          "compute.projects.setCommonInstanceMetadata"
                        ], 
                        "type": "structure"
                      }, 
                      "documentation": "\n        <p>\n        Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.        </p>\n    ", 
                      "type": "string"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#metadata", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Metadata", 
            "type": "structure"
          }, 
          "instance": {
            "documentation": "\n        <p>\n        Name of the instance scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.setMetadata", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.instances.setTags": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/instances/{instance}/setTags"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "fingerprint": {
                "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the tags stored in this object. This field is used optimistic locking. An up-to-date tags fingerprint must be provided in order to modify tags.        </p>\n    ", 
                "format": "byte", 
                "type": "string"
              }, 
              "items": {
                "documentation": "\n        <p>\n        An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Tags", 
            "type": "structure"
          }, 
          "instance": {
            "documentation": "\n        <p>\n        Name of the instance scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.instances.setTags", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.kernels.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/kernels/{kernel}"
      }, 
      "input": {
        "members": {
          "kernel": {
            "documentation": "\n        <p>\n        Name of the kernel resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.kernels.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "deprecated": {
                "documentation": "\n        <p>\n        The deprecation status associated with this kernel.        </p>\n    ", 
                "members": {
                  "DeprecationStatus": {
                    "members": {
                      "deleted": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "deprecated": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "obsolete": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "replacement": {
                        "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "state": {
                        "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#kernel", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }
            }, 
            "shape_name": "Kernel", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.kernels.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/kernels"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.kernels.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The kernel resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Kernel": {
                      "members": {
                        "deprecated": {
                          "documentation": "\n        <p>\n        The deprecation status associated with this kernel.        </p>\n    ", 
                          "members": {
                            "DeprecationStatus": {
                              "members": {
                                "deleted": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "deprecated": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "obsolete": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "replacement": {
                                  "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "state": {
                                  "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                                  "type": "string"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#kernel", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#kernelList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "KernelList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.machineTypes.aggregatedList": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/aggregated/machineTypes"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.machineTypes.aggregatedList", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Name of the scope containing this set of machine types.        </p>\n    ", 
                  "members": {
                    "MachineTypesScopedList": {
                      "members": {
                        "machineTypes": {
                          "documentation": "\n        <p>\n        List of machine types contained in this scope.        </p>\n    ", 
                          "items": {
                            "members": {
                              "MachineType": {
                                "members": {
                                  "deprecated": {
                                    "documentation": "\n        <p>\n        The deprecation status associated with this machine type.        </p>\n    ", 
                                    "members": {
                                      "DeprecationStatus": {
                                        "members": {
                                          "deleted": {
                                            "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                                            "type": "string"
                                          }, 
                                          "deprecated": {
                                            "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                                            "type": "string"
                                          }, 
                                          "obsolete": {
                                            "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                                            "type": "string"
                                          }, 
                                          "replacement": {
                                            "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                                            "type": "string"
                                          }, 
                                          "state": {
                                            "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                                            "type": "string"
                                          }
                                        }, 
                                        "type": "structure"
                                      }
                                    }, 
                                    "type": "structure"
                                  }, 
                                  "description": {
                                    "documentation": "\n        <p>\n        An optional textual description of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "guestCpus": {
                                    "documentation": "\n        <p>\n        Count of CPUs exposed to the instance.        </p>\n    ", 
                                    "format": "int32", 
                                    "type": "integer"
                                  }, 
                                  "imageSpaceGb": {
                                    "documentation": "\n        <p>\n        Space allotted for the image, defined in GB.        </p>\n    ", 
                                    "format": "int32", 
                                    "type": "integer"
                                  }, 
                                  "kind": {
                                    "default": "compute#machineType", 
                                    "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "maximumPersistentDisks": {
                                    "documentation": "\n        <p>\n        Maximum persistent disks allowed.        </p>\n    ", 
                                    "format": "int32", 
                                    "type": "integer"
                                  }, 
                                  "maximumPersistentDisksSizeGb": {
                                    "documentation": "\n        <p>\n        Maximum total persistent disks size (GB) allowed.        </p>\n    ", 
                                    "format": "int64", 
                                    "type": "string"
                                  }, 
                                  "memoryMb": {
                                    "documentation": "\n        <p>\n        Physical memory assigned to the instance, defined in MB.        </p>\n    ", 
                                    "format": "int32", 
                                    "type": "integer"
                                  }, 
                                  "name": {
                                    "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                                    "type": "string"
                                  }, 
                                  "scratchDisks": {
                                    "documentation": "\n        <p>\n        List of extended scratch disks assigned to the instance.        </p>\n    ", 
                                    "items": {
                                      "properties": {
                                        "diskGb": {
                                          "documentation": "\n        <p>\n        Size of the scratch disk, defined in GB.        </p>\n    ", 
                                          "format": "int32", 
                                          "type": "integer"
                                        }, 
                                        "type": "structure"
                                      }, 
                                      "type": "structure"
                                    }, 
                                    "type": "list"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "warning": {
                          "documentation": "\n        <p>\n        Informational warning which replaces the list of machine types when the list is empty.        </p>\n    ", 
                          "properties": {
                            "code": {
                              "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "data": {
                              "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                              "items": {
                                "properties": {
                                  "key": {
                                    "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "type": "structure", 
                                  "value": {
                                    "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }, 
                              "type": "list"
                            }, 
                            "message": {
                              "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        A map of scoped machine type lists.        </p>\n    ", 
                "type": "structure"
              }, 
              "kind": {
                "default": "compute#machineTypeAggregatedList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "MachineTypeAggregatedList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.machineTypes.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/machineTypes/{machineType}"
      }, 
      "input": {
        "members": {
          "machineType": {
            "documentation": "\n        <p>\n        Name of the machine type resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.machineTypes.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "deprecated": {
                "documentation": "\n        <p>\n        The deprecation status associated with this machine type.        </p>\n    ", 
                "members": {
                  "DeprecationStatus": {
                    "members": {
                      "deleted": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "deprecated": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "obsolete": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "replacement": {
                        "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "state": {
                        "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "guestCpus": {
                "documentation": "\n        <p>\n        Count of CPUs exposed to the instance.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "imageSpaceGb": {
                "documentation": "\n        <p>\n        Space allotted for the image, defined in GB.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "kind": {
                "default": "compute#machineType", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "maximumPersistentDisks": {
                "documentation": "\n        <p>\n        Maximum persistent disks allowed.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "maximumPersistentDisksSizeGb": {
                "documentation": "\n        <p>\n        Maximum total persistent disks size (GB) allowed.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "memoryMb": {
                "documentation": "\n        <p>\n        Physical memory assigned to the instance, defined in MB.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "scratchDisks": {
                "documentation": "\n        <p>\n        List of extended scratch disks assigned to the instance.        </p>\n    ", 
                "items": {
                  "properties": {
                    "diskGb": {
                      "documentation": "\n        <p>\n        Size of the scratch disk, defined in GB.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }
            }, 
            "shape_name": "MachineType", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.machineTypes.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/machineTypes"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.machineTypes.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The machine type resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "MachineType": {
                      "members": {
                        "deprecated": {
                          "documentation": "\n        <p>\n        The deprecation status associated with this machine type.        </p>\n    ", 
                          "members": {
                            "DeprecationStatus": {
                              "members": {
                                "deleted": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "deprecated": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "obsolete": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "replacement": {
                                  "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "state": {
                                  "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                                  "type": "string"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "guestCpus": {
                          "documentation": "\n        <p>\n        Count of CPUs exposed to the instance.        </p>\n    ", 
                          "format": "int32", 
                          "type": "integer"
                        }, 
                        "imageSpaceGb": {
                          "documentation": "\n        <p>\n        Space allotted for the image, defined in GB.        </p>\n    ", 
                          "format": "int32", 
                          "type": "integer"
                        }, 
                        "kind": {
                          "default": "compute#machineType", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "maximumPersistentDisks": {
                          "documentation": "\n        <p>\n        Maximum persistent disks allowed.        </p>\n    ", 
                          "format": "int32", 
                          "type": "integer"
                        }, 
                        "maximumPersistentDisksSizeGb": {
                          "documentation": "\n        <p>\n        Maximum total persistent disks size (GB) allowed.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "memoryMb": {
                          "documentation": "\n        <p>\n        Physical memory assigned to the instance, defined in MB.        </p>\n    ", 
                          "format": "int32", 
                          "type": "integer"
                        }, 
                        "name": {
                          "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }, 
                        "scratchDisks": {
                          "documentation": "\n        <p>\n        List of extended scratch disks assigned to the instance.        </p>\n    ", 
                          "items": {
                            "properties": {
                              "diskGb": {
                                "documentation": "\n        <p>\n        Size of the scratch disk, defined in GB.        </p>\n    ", 
                                "format": "int32", 
                                "type": "integer"
                              }, 
                              "type": "structure"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#machineTypeList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "MachineTypeList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.networks.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/networks/{network}"
      }, 
      "input": {
        "members": {
          "network": {
            "documentation": "\n        <p>\n        Name of the network resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.networks.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.networks.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/networks/{network}"
      }, 
      "input": {
        "members": {
          "network": {
            "documentation": "\n        <p>\n        Name of the network resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.networks.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "IPv4Range": {
                "annotations": {
                  "required": [
                    "compute.networks.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Required; The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.        </p>\n    ", 
                "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}/[0-9]{1,2}", 
                "type": "string"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "gatewayIPv4": {
                "documentation": "\n        <p>\n        An optional address that is used for default routing to other networks. This must be within the range specified by IPv4Range, and is typically the first usable address in that range. If not specified, the default value is the first usable address in IPv4Range.        </p>\n    ", 
                "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#network", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.networks.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }
            }, 
            "shape_name": "Network", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.networks.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/networks"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "IPv4Range": {
                "annotations": {
                  "required": [
                    "compute.networks.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Required; The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.        </p>\n    ", 
                "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}/[0-9]{1,2}", 
                "type": "string"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "gatewayIPv4": {
                "documentation": "\n        <p>\n        An optional address that is used for default routing to other networks. This must be within the range specified by IPv4Range, and is typically the first usable address in that range. If not specified, the default value is the first usable address in IPv4Range.        </p>\n    ", 
                "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#network", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.networks.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Network", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.networks.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.networks.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/networks"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.networks.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The network resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Network": {
                      "members": {
                        "IPv4Range": {
                          "annotations": {
                            "required": [
                              "compute.networks.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Required; The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.        </p>\n    ", 
                          "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}/[0-9]{1,2}", 
                          "type": "string"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "gatewayIPv4": {
                          "documentation": "\n        <p>\n        An optional address that is used for default routing to other networks. This must be within the range specified by IPv4Range, and is typically the first usable address in that range. If not specified, the default value is the first usable address in IPv4Range.        </p>\n    ", 
                          "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#network", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "compute.networks.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#networkList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "NetworkList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.projects.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}"
      }, 
      "input": {
        "members": {
          "project": {
            "documentation": "\n        <p>\n        Name of the project resource to retrieve.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.projects.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "commonInstanceMetadata": {
                "documentation": "\n        <p>\n        Metadata key/value pairs available to all instances contained in this project.        </p>\n    ", 
                "members": {
                  "Metadata": {
                    "members": {
                      "fingerprint": {
                        "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.        </p>\n    ", 
                        "format": "byte", 
                        "type": "string"
                      }, 
                      "items": {
                        "documentation": "\n        <p>\n        Array of key/value pairs. The total size of all keys and values must be less than 512 KB.        </p>\n    ", 
                        "items": {
                          "properties": {
                            "key": {
                              "annotations": {
                                "required": [
                                  "compute.instances.insert", 
                                  "compute.projects.setCommonInstanceMetadata"
                                ], 
                                "type": "structure"
                              }, 
                              "documentation": "\n        <p>\n        Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.        </p>\n    ", 
                              "pattern": "[a-zA-Z0-9-_]{1,128}", 
                              "type": "string"
                            }, 
                            "type": "structure", 
                            "value": {
                              "annotations": {
                                "required": [
                                  "compute.instances.insert", 
                                  "compute.projects.setCommonInstanceMetadata"
                                ], 
                                "type": "structure"
                              }, 
                              "documentation": "\n        <p>\n        Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.        </p>\n    ", 
                              "type": "string"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "type": "list"
                      }, 
                      "kind": {
                        "default": "compute#metadata", 
                        "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#project", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "quotas": {
                "documentation": "\n        <p>\n        Quotas assigned to this project.        </p>\n    ", 
                "items": {
                  "members": {
                    "Quota": {
                      "members": {
                        "limit": {
                          "documentation": "\n        <p>\n        Quota limit for this metric.        </p>\n    ", 
                          "format": "double", 
                          "type": "number"
                        }, 
                        "metric": {
                          "documentation": "\n        <p>\n        Name of the quota metric.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "usage": {
                          "documentation": "\n        <p>\n        Current usage of this metric.        </p>\n    ", 
                          "format": "double", 
                          "type": "number"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }
            }, 
            "shape_name": "Project", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.projects.setCommonInstanceMetadata": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/setCommonInstanceMetadata"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "fingerprint": {
                "documentation": "\n        <p>\n        Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.        </p>\n    ", 
                "format": "byte", 
                "type": "string"
              }, 
              "items": {
                "documentation": "\n        <p>\n        Array of key/value pairs. The total size of all keys and values must be less than 512 KB.        </p>\n    ", 
                "items": {
                  "properties": {
                    "key": {
                      "annotations": {
                        "required": [
                          "compute.instances.insert", 
                          "compute.projects.setCommonInstanceMetadata"
                        ], 
                        "type": "structure"
                      }, 
                      "documentation": "\n        <p>\n        Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.        </p>\n    ", 
                      "pattern": "[a-zA-Z0-9-_]{1,128}", 
                      "type": "string"
                    }, 
                    "type": "structure", 
                    "value": {
                      "annotations": {
                        "required": [
                          "compute.instances.insert", 
                          "compute.projects.setCommonInstanceMetadata"
                        ], 
                        "type": "structure"
                      }, 
                      "documentation": "\n        <p>\n        Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.        </p>\n    ", 
                      "type": "string"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#metadata", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Metadata", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.projects.setCommonInstanceMetadata", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.regionOperations.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}/operations/{operation}"
      }, 
      "input": {
        "members": {
          "operation": {
            "documentation": "\n        <p>\n        Name of the operation resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the region scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.regionOperations.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.regionOperations.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}/operations/{operation}"
      }, 
      "input": {
        "members": {
          "operation": {
            "documentation": "\n        <p>\n        Name of the operation resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.regionOperations.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.regionOperations.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}/operations"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the region scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.regionOperations.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The operation resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Operation": {
                      "members": {
                        "kind": {
                          "default": "compute#operation", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#operationList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "OperationList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.regions.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions/{region}"
      }, 
      "input": {
        "members": {
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "region": {
            "documentation": "\n        <p>\n        Name of the region resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.regions.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "deprecated": {
                "documentation": "\n        <p>\n        The deprecation status associated with this region.        </p>\n    ", 
                "members": {
                  "DeprecationStatus": {
                    "members": {
                      "deleted": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "deprecated": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "obsolete": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "replacement": {
                        "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "state": {
                        "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "description": {
                "documentation": "\n        <p>\n        Textual description of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#region", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "quotas": {
                "documentation": "\n        <p>\n        Quotas assigned to this region.        </p>\n    ", 
                "items": {
                  "members": {
                    "Quota": {
                      "members": {
                        "limit": {
                          "documentation": "\n        <p>\n        Quota limit for this metric.        </p>\n    ", 
                          "format": "double", 
                          "type": "number"
                        }, 
                        "metric": {
                          "documentation": "\n        <p>\n        Name of the quota metric.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "usage": {
                          "documentation": "\n        <p>\n        Current usage of this metric.        </p>\n    ", 
                          "format": "double", 
                          "type": "number"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "status": {
                "documentation": "\n        <p>\n        Status of the region, \"UP\" or \"DOWN\".        </p>\n    ", 
                "type": "string"
              }, 
              "zones": {
                "documentation": "\n        <p>\n        A list of zones homed in this region, in the form of resource URLs.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }
            }, 
            "shape_name": "Region", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.regions.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/regions"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.regions.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The region resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Region": {
                      "members": {
                        "deprecated": {
                          "documentation": "\n        <p>\n        The deprecation status associated with this region.        </p>\n    ", 
                          "members": {
                            "DeprecationStatus": {
                              "members": {
                                "deleted": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "deprecated": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "obsolete": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "replacement": {
                                  "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "state": {
                                  "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                                  "type": "string"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        Textual description of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#region", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "quotas": {
                          "documentation": "\n        <p>\n        Quotas assigned to this region.        </p>\n    ", 
                          "items": {
                            "members": {
                              "Quota": {
                                "members": {
                                  "limit": {
                                    "documentation": "\n        <p>\n        Quota limit for this metric.        </p>\n    ", 
                                    "format": "double", 
                                    "type": "number"
                                  }, 
                                  "metric": {
                                    "documentation": "\n        <p>\n        Name of the quota metric.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "usage": {
                                    "documentation": "\n        <p>\n        Current usage of this metric.        </p>\n    ", 
                                    "format": "double", 
                                    "type": "number"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "status": {
                          "documentation": "\n        <p>\n        Status of the region, \"UP\" or \"DOWN\".        </p>\n    ", 
                          "type": "string"
                        }, 
                        "zones": {
                          "documentation": "\n        <p>\n        A list of zones homed in this region, in the form of resource URLs.        </p>\n    ", 
                          "items": {
                            "type": "string"
                          }, 
                          "type": "list"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#regionList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "RegionList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.routes.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/routes/{route}"
      }, 
      "input": {
        "members": {
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "route": {
            "documentation": "\n        <p>\n        Name of the route resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.routes.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.routes.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/routes/{route}"
      }, 
      "input": {
        "members": {
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "route": {
            "documentation": "\n        <p>\n        Name of the route resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.routes.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "destRange": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Which packets does this route apply to?        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#route", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "network": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the network to which this route is applied; provided by the client when the route is created.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopGateway": {
                "documentation": "\n        <p>\n        The URL to a gateway that should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopInstance": {
                "documentation": "\n        <p>\n        The URL to an instance that should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopIp": {
                "documentation": "\n        <p>\n        The network IP address of an instance that should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopNetwork": {
                "documentation": "\n        <p>\n        The URL of the local network if it should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "priority": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Breaks ties between Routes of equal specificity. Routes with smaller values win when tied with routes with larger values.        </p>\n    ", 
                "format": "uint32", 
                "type": "integer"
              }, 
              "tags": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        A list of instance tags to which this route applies.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "warnings": {
                "documentation": "\n        <p>\n        If potential misconfigurations are detected for this route, this field will be populated with warning messages.        </p>\n    ", 
                "items": {
                  "properties": {
                    "code": {
                      "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "data": {
                      "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                      "items": {
                        "properties": {
                          "key": {
                            "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                            "type": "string"
                          }, 
                          "type": "structure", 
                          "value": {
                            "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                            "type": "string"
                          }
                        }, 
                        "type": "structure"
                      }, 
                      "type": "list"
                    }, 
                    "message": {
                      "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }
            }, 
            "shape_name": "Route", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.routes.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/routes"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "destRange": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Which packets does this route apply to?        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#route", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "network": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        URL of the network to which this route is applied; provided by the client when the route is created.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopGateway": {
                "documentation": "\n        <p>\n        The URL to a gateway that should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopInstance": {
                "documentation": "\n        <p>\n        The URL to an instance that should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopIp": {
                "documentation": "\n        <p>\n        The network IP address of an instance that should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "nextHopNetwork": {
                "documentation": "\n        <p>\n        The URL of the local network if it should handle matching packets.        </p>\n    ", 
                "type": "string"
              }, 
              "priority": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Breaks ties between Routes of equal specificity. Routes with smaller values win when tied with routes with larger values.        </p>\n    ", 
                "format": "uint32", 
                "type": "integer"
              }, 
              "tags": {
                "annotations": {
                  "required": [
                    "compute.routes.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        A list of instance tags to which this route applies.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }, 
              "warnings": {
                "documentation": "\n        <p>\n        If potential misconfigurations are detected for this route, this field will be populated with warning messages.        </p>\n    ", 
                "items": {
                  "properties": {
                    "code": {
                      "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "data": {
                      "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                      "items": {
                        "properties": {
                          "key": {
                            "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                            "type": "string"
                          }, 
                          "type": "structure", 
                          "value": {
                            "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                            "type": "string"
                          }
                        }, 
                        "type": "structure"
                      }, 
                      "type": "list"
                    }, 
                    "message": {
                      "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Route", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.routes.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.routes.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/routes"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.routes.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The route resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Route": {
                      "members": {
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "destRange": {
                          "annotations": {
                            "required": [
                              "compute.routes.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Which packets does this route apply to?        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#route", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "compute.routes.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }, 
                        "network": {
                          "annotations": {
                            "required": [
                              "compute.routes.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        URL of the network to which this route is applied; provided by the client when the route is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "nextHopGateway": {
                          "documentation": "\n        <p>\n        The URL to a gateway that should handle matching packets.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "nextHopInstance": {
                          "documentation": "\n        <p>\n        The URL to an instance that should handle matching packets.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "nextHopIp": {
                          "documentation": "\n        <p>\n        The network IP address of an instance that should handle matching packets.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "nextHopNetwork": {
                          "documentation": "\n        <p>\n        The URL of the local network if it should handle matching packets.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "priority": {
                          "annotations": {
                            "required": [
                              "compute.routes.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Breaks ties between Routes of equal specificity. Routes with smaller values win when tied with routes with larger values.        </p>\n    ", 
                          "format": "uint32", 
                          "type": "integer"
                        }, 
                        "tags": {
                          "annotations": {
                            "required": [
                              "compute.routes.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        A list of instance tags to which this route applies.        </p>\n    ", 
                          "items": {
                            "type": "string"
                          }, 
                          "type": "list"
                        }, 
                        "warnings": {
                          "documentation": "\n        <p>\n        If potential misconfigurations are detected for this route, this field will be populated with warning messages.        </p>\n    ", 
                          "items": {
                            "properties": {
                              "code": {
                                "documentation": "\n        <p>\n        The warning type identifier for this warning.        </p>\n    ", 
                                "type": "string"
                              }, 
                              "data": {
                                "documentation": "\n        <p>\n        Metadata for this warning in 'key: value' format.        </p>\n    ", 
                                "items": {
                                  "properties": {
                                    "key": {
                                      "documentation": "\n        <p>\n        A key for the warning data.        </p>\n    ", 
                                      "type": "string"
                                    }, 
                                    "type": "structure", 
                                    "value": {
                                      "documentation": "\n        <p>\n        A warning data value corresponding to the key.        </p>\n    ", 
                                      "type": "string"
                                    }
                                  }, 
                                  "type": "structure"
                                }, 
                                "type": "list"
                              }, 
                              "message": {
                                "documentation": "\n        <p>\n        Optional human-readable details for this warning.        </p>\n    ", 
                                "type": "string"
                              }, 
                              "type": "structure"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#routeList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "RouteList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.snapshots.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/snapshots/{snapshot}"
      }, 
      "input": {
        "members": {
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "snapshot": {
            "documentation": "\n        <p>\n        Name of the persistent disk snapshot resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.snapshots.delete", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.snapshots.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/snapshots/{snapshot}"
      }, 
      "input": {
        "members": {
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "snapshot": {
            "documentation": "\n        <p>\n        Name of the persistent disk snapshot resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.snapshots.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "description": {
                "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#snapshot", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                "type": "string"
              }, 
              "sourceDiskId": {
                "documentation": "\n        <p>\n        The 'id' value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Snapshot", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.snapshots.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/global/snapshots"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.snapshots.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The persistent snapshot resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Snapshot": {
                      "members": {
                        "description": {
                          "documentation": "\n        <p>\n        An optional textual description of the resource; provided by the client when the resource is created.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#snapshot", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "name": {
                          "documentation": "\n        <p>\n        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.        </p>\n    ", 
                          "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?", 
                          "type": "string"
                        }, 
                        "sourceDiskId": {
                          "documentation": "\n        <p>\n        The 'id' value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#snapshotList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "SnapshotList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.zoneOperations.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/operations/{operation}"
      }, 
      "input": {
        "members": {
          "operation": {
            "documentation": "\n        <p>\n        Name of the operation resource to delete.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.zoneOperations.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute"
      ]
    }, 
    "compute.zoneOperations.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/operations/{operation}"
      }, 
      "input": {
        "members": {
          "operation": {
            "documentation": "\n        <p>\n        Name of the operation resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.zoneOperations.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "kind": {
                "default": "compute#operation", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Operation", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.zoneOperations.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}/operations"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.zoneOperations.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The operation resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Operation": {
                      "members": {
                        "kind": {
                          "default": "compute#operation", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#operationList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "OperationList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.zones.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones/{zone}"
      }, 
      "input": {
        "members": {
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "zone": {
            "documentation": "\n        <p>\n        Name of the zone resource to return.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.zones.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "deprecated": {
                "documentation": "\n        <p>\n        The deprecation status associated with this zone.        </p>\n    ", 
                "members": {
                  "DeprecationStatus": {
                    "members": {
                      "deleted": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "deprecated": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "obsolete": {
                        "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "replacement": {
                        "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "state": {
                        "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "description": {
                "documentation": "\n        <p>\n        Textual description of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "compute#zone", 
                "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "maintenanceWindows": {
                "documentation": "\n        <p>\n        Scheduled maintenance windows for the zone. When the zone is in a maintenance window, all resources which reside in the zone will be unavailable.        </p>\n    ", 
                "items": {
                  "properties": {
                    "beginTime": {
                      "documentation": "\n        <p>\n        Begin time of the maintenance window, in RFC 3339 format.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "description": {
                      "documentation": "\n        <p>\n        Textual description of the maintenance window.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "endTime": {
                      "documentation": "\n        <p>\n        End time of the maintenance window, in RFC 3339 format.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "name": {
                      "documentation": "\n        <p>\n        Name of the maintenance window.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "name": {
                "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                "type": "string"
              }, 
              "quotas": {
                "documentation": "\n        <p>\n        Quotas assigned to this zone.        </p>\n    ", 
                "items": {
                  "members": {
                    "Quota": {
                      "members": {
                        "limit": {
                          "documentation": "\n        <p>\n        Quota limit for this metric.        </p>\n    ", 
                          "format": "double", 
                          "type": "number"
                        }, 
                        "metric": {
                          "documentation": "\n        <p>\n        Name of the quota metric.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "usage": {
                          "documentation": "\n        <p>\n        Current usage of this metric.        </p>\n    ", 
                          "format": "double", 
                          "type": "number"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "status": {
                "documentation": "\n        <p>\n        Status of the zone. \"UP\" or \"DOWN\".        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Zone", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }, 
    "compute.zones.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "compute/v1beta15/projects/{project}/zones"
      }, 
      "input": {
        "members": {
          "filter": {
            "documentation": "\n        <p>\n        Optional. Filter expression for filtering listed resources.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Optional. Maximum count of results to be returned. Maximum and default value is 100.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        Name of the project scoping this request.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "compute.zones.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The zone resources.        </p>\n    ", 
                "items": {
                  "members": {
                    "Zone": {
                      "members": {
                        "deprecated": {
                          "documentation": "\n        <p>\n        The deprecation status associated with this zone.        </p>\n    ", 
                          "members": {
                            "DeprecationStatus": {
                              "members": {
                                "deleted": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "deprecated": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "obsolete": {
                                  "documentation": "\n        <p>\n        An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "replacement": {
                                  "documentation": "\n        <p>\n        A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "state": {
                                  "documentation": "\n        <p>\n        The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.        </p>\n    ", 
                                  "type": "string"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "description": {
                          "documentation": "\n        <p>\n        Textual description of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "compute#zone", 
                          "documentation": "\n        <p>\n        Type of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "maintenanceWindows": {
                          "documentation": "\n        <p>\n        Scheduled maintenance windows for the zone. When the zone is in a maintenance window, all resources which reside in the zone will be unavailable.        </p>\n    ", 
                          "items": {
                            "properties": {
                              "beginTime": {
                                "documentation": "\n        <p>\n        Begin time of the maintenance window, in RFC 3339 format.        </p>\n    ", 
                                "type": "string"
                              }, 
                              "description": {
                                "documentation": "\n        <p>\n        Textual description of the maintenance window.        </p>\n    ", 
                                "type": "string"
                              }, 
                              "endTime": {
                                "documentation": "\n        <p>\n        End time of the maintenance window, in RFC 3339 format.        </p>\n    ", 
                                "type": "string"
                              }, 
                              "name": {
                                "documentation": "\n        <p>\n        Name of the maintenance window.        </p>\n    ", 
                                "type": "string"
                              }, 
                              "type": "structure"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "name": {
                          "documentation": "\n        <p>\n        Name of the resource.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "quotas": {
                          "documentation": "\n        <p>\n        Quotas assigned to this zone.        </p>\n    ", 
                          "items": {
                            "members": {
                              "Quota": {
                                "members": {
                                  "limit": {
                                    "documentation": "\n        <p>\n        Quota limit for this metric.        </p>\n    ", 
                                    "format": "double", 
                                    "type": "number"
                                  }, 
                                  "metric": {
                                    "documentation": "\n        <p>\n        Name of the quota metric.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "usage": {
                                    "documentation": "\n        <p>\n        Current usage of this metric.        </p>\n    ", 
                                    "format": "double", 
                                    "type": "number"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "status": {
                          "documentation": "\n        <p>\n        Status of the zone. \"UP\" or \"DOWN\".        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "compute#zoneList", 
                "documentation": "\n        <p>\n        Type of resource.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ZoneList", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/compute", 
        "https://www.googleapis.com/auth/compute.readonly"
      ]
    }
  }, 
  "result_wrapped": false, 
  "service_abbreviation": "Compute Engine API", 
  "service_full_name": "API for the Google Compute Engine service.", 
  "signature_version": "oauth2-gcp", 
  "type": "rest-json", 
  "xmlnamespace": "unknown"
}