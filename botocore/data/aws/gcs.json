{
  "api_version": "v1beta2", 
  "endpoint_prefix": "storage", 
  "endpoint_url": "https://www.googleapis.com/", 
  "metadata": {}, 
  "operations": {
    "storage.bucketAccessControls.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.bucketAccessControls.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.bucketAccessControls.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.bucketAccessControls.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucketAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "BucketAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.bucketAccessControls.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/acl"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucketAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "BucketAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.bucketAccessControls.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucketAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "BucketAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.bucketAccessControls.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/acl"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.bucketAccessControls.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The list of items.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "storage#bucketAccessControls", 
                "documentation": "\n        <p>\n        The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "BucketAccessControls", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.bucketAccessControls.patch": {
      "http": {
        "method": "PATCH", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucketAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "BucketAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.bucketAccessControls.patch", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucketAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "BucketAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.bucketAccessControls.update": {
      "http": {
        "method": "PUT", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucketAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "BucketAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.bucketAccessControls.update", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucketAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "annotations": {
                  "required": [
                    "storage.bucketAccessControls.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "BucketAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.buckets.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.buckets.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.buckets.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.buckets.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.buckets.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "cors": {
                "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                "items": {
                  "properties": {
                    "maxAgeSeconds": {
                      "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "method": {
                      "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "origin": {
                      "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "responseHeader": {
                      "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "defaultObjectAcl": {
                "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucket", 
                "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "location": {
                "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                "type": "string"
              }, 
              "logging": {
                "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                "properties": {
                  "logBucket": {
                    "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "logObjectPrefix": {
                    "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "storage.buckets.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "storageClass": {
                "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                "type": "string"
              }, 
              "timeCreated": {
                "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "versioning": {
                "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                "properties": {
                  "enabled": {
                    "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                    "type": "boolean"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "website": {
                "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                "properties": {
                  "mainPageSuffix": {
                    "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "notFoundPage": {
                    "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }
            }, 
            "shape_name": "Bucket", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_only", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.buckets.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.buckets.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "cors": {
                "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                "items": {
                  "properties": {
                    "maxAgeSeconds": {
                      "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "method": {
                      "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "origin": {
                      "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "responseHeader": {
                      "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "defaultObjectAcl": {
                "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucket", 
                "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "location": {
                "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                "type": "string"
              }, 
              "logging": {
                "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                "properties": {
                  "logBucket": {
                    "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "logObjectPrefix": {
                    "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "storage.buckets.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "storageClass": {
                "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                "type": "string"
              }, 
              "timeCreated": {
                "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "versioning": {
                "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                "properties": {
                  "enabled": {
                    "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                    "type": "boolean"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "website": {
                "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                "properties": {
                  "mainPageSuffix": {
                    "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "notFoundPage": {
                    "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Bucket", 
            "type": "structure"
          }, 
          "project": {
            "documentation": "\n        <p>\n        A valid API project identifier.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.buckets.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.buckets.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "cors": {
                "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                "items": {
                  "properties": {
                    "maxAgeSeconds": {
                      "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "method": {
                      "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "origin": {
                      "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "responseHeader": {
                      "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "defaultObjectAcl": {
                "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucket", 
                "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "location": {
                "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                "type": "string"
              }, 
              "logging": {
                "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                "properties": {
                  "logBucket": {
                    "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "logObjectPrefix": {
                    "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "storage.buckets.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "storageClass": {
                "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                "type": "string"
              }, 
              "timeCreated": {
                "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "versioning": {
                "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                "properties": {
                  "enabled": {
                    "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                    "type": "boolean"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "website": {
                "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                "properties": {
                  "mainPageSuffix": {
                    "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "notFoundPage": {
                    "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }
            }, 
            "shape_name": "Bucket", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.buckets.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b"
      }, 
      "input": {
        "members": {
          "maxResults": {
            "documentation": "\n        <p>\n        Maximum number of buckets to return.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        A previously-returned page token representing part of the larger set of results to view.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "project": {
            "documentation": "\n        <p>\n        A valid API project identifier.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.buckets.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The list of items.        </p>\n    ", 
                "items": {
                  "members": {
                    "Bucket": {
                      "members": {
                        "acl": {
                          "annotations": {
                            "required": [
                              "storage.buckets.update"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                          "items": {
                            "members": {
                              "BucketAccessControl": {
                                "members": {
                                  "bucket": {
                                    "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "domain": {
                                    "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "email": {
                                    "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "entity": {
                                    "annotations": {
                                      "required": [
                                        "storage.bucketAccessControls.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "entityId": {
                                    "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "etag": {
                                    "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kind": {
                                    "default": "storage#bucketAccessControl", 
                                    "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "role": {
                                    "annotations": {
                                      "required": [
                                        "storage.bucketAccessControls.insert"
                                      ], 
                                      "type": "structure"
                                    }, 
                                    "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "selfLink": {
                                    "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "cors": {
                          "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                          "items": {
                            "properties": {
                              "maxAgeSeconds": {
                                "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                                "format": "int32", 
                                "type": "integer"
                              }, 
                              "method": {
                                "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                                "items": {
                                  "type": "string"
                                }, 
                                "type": "list"
                              }, 
                              "origin": {
                                "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                                "items": {
                                  "type": "string"
                                }, 
                                "type": "list"
                              }, 
                              "responseHeader": {
                                "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                                "items": {
                                  "type": "string"
                                }, 
                                "type": "list"
                              }, 
                              "type": "structure"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "defaultObjectAcl": {
                          "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                          "items": {
                            "members": {
                              "ObjectAccessControl": {
                                "members": {
                                  "bucket": {
                                    "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "domain": {
                                    "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "email": {
                                    "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "entity": {
                                    "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "entityId": {
                                    "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "etag": {
                                    "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "generation": {
                                    "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                                    "format": "int64", 
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kind": {
                                    "default": "storage#objectAccessControl", 
                                    "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "object": {
                                    "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "role": {
                                    "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "selfLink": {
                                    "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucket", 
                          "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "location": {
                          "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "logging": {
                          "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                          "properties": {
                            "logBucket": {
                              "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "logObjectPrefix": {
                              "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }, 
                        "metageneration": {
                          "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "name": {
                          "annotations": {
                            "required": [
                              "storage.buckets.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "owner": {
                          "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                          "properties": {
                            "entity": {
                              "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "entityId": {
                              "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "storageClass": {
                          "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "timeCreated": {
                          "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                          "format": "date-time", 
                          "type": "string"
                        }, 
                        "versioning": {
                          "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                          "properties": {
                            "enabled": {
                              "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                              "type": "boolean"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }, 
                        "website": {
                          "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                          "properties": {
                            "mainPageSuffix": {
                              "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "notFoundPage": {
                              "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "storage#buckets", 
                "documentation": "\n        <p>\n        The kind of item this is. For lists of buckets, this is always storage#buckets.        </p>\n    ", 
                "type": "string"
              }, 
              "nextPageToken": {
                "documentation": "\n        <p>\n        The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Buckets", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_only", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.buckets.patch": {
      "http": {
        "method": "PATCH", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.buckets.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "cors": {
                "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                "items": {
                  "properties": {
                    "maxAgeSeconds": {
                      "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "method": {
                      "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "origin": {
                      "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "responseHeader": {
                      "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "defaultObjectAcl": {
                "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucket", 
                "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "location": {
                "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                "type": "string"
              }, 
              "logging": {
                "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                "properties": {
                  "logBucket": {
                    "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "logObjectPrefix": {
                    "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "storage.buckets.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "storageClass": {
                "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                "type": "string"
              }, 
              "timeCreated": {
                "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "versioning": {
                "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                "properties": {
                  "enabled": {
                    "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                    "type": "boolean"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "website": {
                "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                "properties": {
                  "mainPageSuffix": {
                    "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "notFoundPage": {
                    "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Bucket", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to full.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.buckets.patch", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.buckets.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "cors": {
                "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                "items": {
                  "properties": {
                    "maxAgeSeconds": {
                      "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "method": {
                      "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "origin": {
                      "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "responseHeader": {
                      "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "defaultObjectAcl": {
                "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucket", 
                "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "location": {
                "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                "type": "string"
              }, 
              "logging": {
                "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                "properties": {
                  "logBucket": {
                    "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "logObjectPrefix": {
                    "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "storage.buckets.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "storageClass": {
                "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                "type": "string"
              }, 
              "timeCreated": {
                "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "versioning": {
                "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                "properties": {
                  "enabled": {
                    "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                    "type": "boolean"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "website": {
                "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                "properties": {
                  "mainPageSuffix": {
                    "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "notFoundPage": {
                    "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }
            }, 
            "shape_name": "Bucket", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.buckets.update": {
      "http": {
        "method": "PUT", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.buckets.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "cors": {
                "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                "items": {
                  "properties": {
                    "maxAgeSeconds": {
                      "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "method": {
                      "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "origin": {
                      "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "responseHeader": {
                      "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "defaultObjectAcl": {
                "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucket", 
                "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "location": {
                "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                "type": "string"
              }, 
              "logging": {
                "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                "properties": {
                  "logBucket": {
                    "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "logObjectPrefix": {
                    "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "storage.buckets.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "storageClass": {
                "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                "type": "string"
              }, 
              "timeCreated": {
                "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "versioning": {
                "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                "properties": {
                  "enabled": {
                    "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                    "type": "boolean"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "website": {
                "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                "properties": {
                  "mainPageSuffix": {
                    "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "notFoundPage": {
                    "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Bucket", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to full.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.buckets.update", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.buckets.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the bucket.        </p>\n    ", 
                "items": {
                  "members": {
                    "BucketAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#bucketAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER, WRITER, or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "cors": {
                "documentation": "\n        <p>\n        The bucket's Cross-Origin Resource Sharing (CORS) configuration.        </p>\n    ", 
                "items": {
                  "properties": {
                    "maxAgeSeconds": {
                      "documentation": "\n        <p>\n        The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.        </p>\n    ", 
                      "format": "int32", 
                      "type": "integer"
                    }, 
                    "method": {
                      "documentation": "\n        <p>\n        The list of HTTP methods on which to include CORS response headers, e.g. GET, OPTIONS, POST. Note, \"*\" is permitted in the list of methods, and means \"any method\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "origin": {
                      "documentation": "\n        <p>\n        The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "responseHeader": {
                      "documentation": "\n        <p>\n        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.        </p>\n    ", 
                      "items": {
                        "type": "string"
                      }, 
                      "type": "list"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "defaultObjectAcl": {
                "documentation": "\n        <p>\n        Default access controls to apply to new objects when no ACL is provided.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#bucket", 
                "documentation": "\n        <p>\n        The kind of item this is. For buckets, this is always storage#bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "location": {
                "documentation": "\n        <p>\n        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.        </p>\n    ", 
                "type": "string"
              }, 
              "logging": {
                "documentation": "\n        <p>\n        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.        </p>\n    ", 
                "properties": {
                  "logBucket": {
                    "documentation": "\n        <p>\n        The destination bucket where the current bucket's logs should be placed.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "logObjectPrefix": {
                    "documentation": "\n        <p>\n        A prefix for log object names.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The metadata generation of this bucket.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "annotations": {
                  "required": [
                    "storage.buckets.insert"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the bucket. This will always be the project team's owner group.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form group-groupId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The URI of this bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "storageClass": {
                "documentation": "\n        <p>\n        The bucket's storage class. This defines how objects in the bucket will be stored and determines the SLA and the cost of storage. Can be STANDARD or DRA. Defaults to STANDARD.        </p>\n    ", 
                "type": "string"
              }, 
              "timeCreated": {
                "documentation": "\n        <p>\n        Creation time of the bucket in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "versioning": {
                "documentation": "\n        <p>\n        The bucket's versioning configuration.        </p>\n    ", 
                "properties": {
                  "enabled": {
                    "documentation": "\n        <p>\n        While set to true, versioning is fully enabled for this bucket.        </p>\n    ", 
                    "type": "boolean"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "website": {
                "documentation": "\n        <p>\n        The bucket's website configuration.        </p>\n    ", 
                "properties": {
                  "mainPageSuffix": {
                    "documentation": "\n        <p>\n        Behaves as the bucket's directory index where missing objects are treated as potential directories.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "notFoundPage": {
                    "documentation": "\n        <p>\n        The custom object to return when a requested resource is not found.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }
            }, 
            "shape_name": "Bucket", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.channels.stop": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/channels/stop"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "address": {
                "documentation": "\n        <p>\n        The address of the receiving entity where events are delivered. Specific to the channel type.        </p>\n    ", 
                "type": "string"
              }, 
              "expiration": {
                "documentation": "\n        <p>\n        The expiration instant for this channel if it is defined.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        A UUID for the channel        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "api#channel", 
                "documentation": "\n        <p>\n        A channel watching an API resource        </p>\n    ", 
                "type": "string"
              }, 
              "params": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Declares a new parameter by name.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        Additional parameters controlling delivery channel behavior        </p>\n    ", 
                "type": "structure"
              }, 
              "resourceId": {
                "documentation": "\n        <p>\n        An opaque id that identifies the resource that is being watched. Stable across different API versions        </p>\n    ", 
                "type": "string"
              }, 
              "resourceUri": {
                "documentation": "\n        <p>\n        The canonicalized ID of the watched resource.        </p>\n    ", 
                "type": "string"
              }, 
              "token": {
                "documentation": "\n        <p>\n        An arbitrary string associated with the channel that is delivered to the target address with each event delivered over this channel.        </p>\n    ", 
                "type": "string"
              }, 
              "type": {
                "documentation": "\n        <p>\n        The type of delivery mechanism used by this channel        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Channel", 
            "type": "structure"
          }
        }
      }, 
      "name": "storage.channels.stop", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_only", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.defaultObjectAccessControls.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.defaultObjectAccessControls.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.defaultObjectAccessControls.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.defaultObjectAccessControls.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.defaultObjectAccessControls.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/defaultObjectAcl"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.defaultObjectAccessControls.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.defaultObjectAccessControls.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/defaultObjectAcl"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.defaultObjectAccessControls.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The list of items.        </p>\n    ", 
                "items": {
                  "type": "any"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "storage#objectAccessControls", 
                "documentation": "\n        <p>\n        The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControls", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.defaultObjectAccessControls.patch": {
      "http": {
        "method": "PATCH", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.defaultObjectAccessControls.patch", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.defaultObjectAccessControls.update": {
      "http": {
        "method": "PUT", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.defaultObjectAccessControls.update", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.objectAccessControls.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objectAccessControls.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.objectAccessControls.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objectAccessControls.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.objectAccessControls.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}/acl"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objectAccessControls.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.objectAccessControls.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}/acl"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objectAccessControls.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The list of items.        </p>\n    ", 
                "items": {
                  "type": "any"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "storage#objectAccessControls", 
                "documentation": "\n        <p>\n        The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControls", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.objectAccessControls.patch": {
      "http": {
        "method": "PATCH", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objectAccessControls.patch", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.objectAccessControls.update": {
      "http": {
        "method": "PUT", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of a bucket.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "entity": {
            "documentation": "\n        <p>\n        The entity holding the permission. Can be user-userId, group-groupId, allUsers, or allAuthenticatedUsers.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objectAccessControls.update", 
      "output": {
        "members": {
          "response": {
            "members": {
              "bucket": {
                "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                "type": "string"
              }, 
              "domain": {
                "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "email": {
                "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "entity": {
                "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                "type": "string"
              }, 
              "entityId": {
                "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#objectAccessControl", 
                "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                "type": "string"
              }, 
              "object": {
                "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "role": {
                "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                "type": "string"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "ObjectAccessControl", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control"
      ]
    }, 
    "storage.objects.compose": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{destinationBucket}/o/{destinationObject}/compose"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "destination": {
                "documentation": "\n        <p>\n        Properties of the resulting object        </p>\n    ", 
                "members": {
                  "Object": {
                    "members": {
                      "acl": {
                        "annotations": {
                          "required": [
                            "storage.objects.update"
                          ], 
                          "type": "structure"
                        }, 
                        "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                        "items": {
                          "members": {
                            "ObjectAccessControl": {
                              "members": {
                                "bucket": {
                                  "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "domain": {
                                  "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "email": {
                                  "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "entity": {
                                  "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "entityId": {
                                  "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "etag": {
                                  "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "generation": {
                                  "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                                  "format": "int64", 
                                  "type": "string"
                                }, 
                                "id": {
                                  "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "kind": {
                                  "default": "storage#objectAccessControl", 
                                  "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "object": {
                                  "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "role": {
                                  "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                                  "type": "string"
                                }, 
                                "selfLink": {
                                  "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                                  "type": "string"
                                }
                              }, 
                              "type": "structure"
                            }
                          }, 
                          "type": "structure"
                        }, 
                        "type": "list"
                      }, 
                      "bucket": {
                        "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "cacheControl": {
                        "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "componentCount": {
                        "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                        "format": "int32", 
                        "type": "integer"
                      }, 
                      "contentDisposition": {
                        "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "contentEncoding": {
                        "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "contentLanguage": {
                        "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "contentType": {
                        "annotations": {
                          "required": [
                            "storage.objects.update"
                          ], 
                          "type": "structure"
                        }, 
                        "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "crc32c": {
                        "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "etag": {
                        "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "generation": {
                        "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                        "format": "int64", 
                        "type": "string"
                      }, 
                      "id": {
                        "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "kind": {
                        "default": "storage#object", 
                        "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "md5Hash": {
                        "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "mediaLink": {
                        "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "metadata": {
                        "additionalProperties": {
                          "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                        "type": "structure"
                      }, 
                      "metageneration": {
                        "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                        "format": "int64", 
                        "type": "string"
                      }, 
                      "name": {
                        "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "owner": {
                        "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                        "properties": {
                          "entity": {
                            "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                            "type": "string"
                          }, 
                          "entityId": {
                            "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                            "type": "string"
                          }, 
                          "type": "structure"
                        }, 
                        "type": "structure"
                      }, 
                      "selfLink": {
                        "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                        "type": "string"
                      }, 
                      "size": {
                        "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                        "format": "uint64", 
                        "type": "string"
                      }, 
                      "timeDeleted": {
                        "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                        "format": "date-time", 
                        "type": "string"
                      }, 
                      "updated": {
                        "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                        "format": "date-time", 
                        "type": "string"
                      }
                    }, 
                    "type": "structure"
                  }
                }, 
                "type": "structure"
              }, 
              "kind": {
                "default": "storage#composeRequest", 
                "documentation": "\n        <p>\n        The kind of item this is.        </p>\n    ", 
                "type": "string"
              }, 
              "sourceObjects": {
                "annotations": {
                  "required": [
                    "storage.objects.compose"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        The list of source objects that will be concatenated into a single object.        </p>\n    ", 
                "items": {
                  "properties": {
                    "generation": {
                      "documentation": "\n        <p>\n        The generation of this object to use as the source.        </p>\n    ", 
                      "format": "int64", 
                      "type": "string"
                    }, 
                    "name": {
                      "annotations": {
                        "required": [
                          "storage.objects.compose"
                        ], 
                        "type": "structure"
                      }, 
                      "documentation": "\n        <p>\n        The source object's name. The source object's bucket is implicitly the destination bucket.        </p>\n    ", 
                      "type": "string"
                    }, 
                    "objectPreconditions": {
                      "properties": {
                        "ifGenerationMatch": {
                          "documentation": "\n        <p>\n        Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "type": "structure"
                      }, 
                      "type": "structure"
                    }, 
                    "type": "structure"
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "ComposeRequest", 
            "type": "structure"
          }, 
          "destinationBucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which to store the new object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "destinationObject": {
            "documentation": "\n        <p>\n        Name of the new object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.compose", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "shape_name": "Object", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.copy": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Object", 
            "type": "structure"
          }, 
          "destinationBucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "destinationObject": {
            "documentation": "\n        <p>\n        Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the destination object's current generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the destination object's current generation does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the destination object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the destination object's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifSourceGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the source object's generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifSourceGenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the source object's generation does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifSourceMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the source object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifSourceMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the source object's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "sourceBucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which to find the source object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "sourceGeneration": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of the source object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "sourceObject": {
            "documentation": "\n        <p>\n        Name of the source object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.copy", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "shape_name": "Object", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.delete": {
      "http": {
        "method": "DELETE", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which the object resides.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.delete", 
      "output": {
        "members": {}
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.get": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}"
      }, 
      "input": {
        "members": {
          "alt": {
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which the object resides.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's generation does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.get", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "shape_name": "Object", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_only", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.insert": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "upload/storage/v1beta2/b/{bucket}/o"
      }, 
      "input": {
        "members": {
          "body": {
            "payload": true, 
            "required": false, 
            "shape_name": "String", 
            "type": "blob"
          }, 
          "bucket": {
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "contentLength": {
            "location": "header", 
            "location_name": "Content-Length", 
            "required": false, 
            "type": "string"
          }, 
          "contentType": {
            "location": "header", 
            "location_name": "Content-Type", 
            "required": false, 
            "type": "string"
          }, 
          "ifGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "name": {
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "uploadType": {
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "xUploadContentLength": {
            "location": "header", 
            "location_name": "X-Upload-Content-Length", 
            "required": false, 
            "type": "string"
          }, 
          "xUploadContentType": {
            "location": "header", 
            "location_name": "X-Upload-Content-Type", 
            "required": false, 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.insert", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "shape_name": "Object", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.insert.resume": {
      "http": {
        "method": "PUT", 
        "response_code": 201, 
        "uri": "upload/storage/v1beta2/b/{bucket}/o"
      }, 
      "input": {
        "members": {
          "body": {
            "payload": true, 
            "required": false, 
            "type": "string"
          }, 
          "bucket": {
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "contentLength": {
            "location": "header", 
            "location_name": "Content-Length", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "contentRange": {
            "location": "header", 
            "location_name": "Content-Range", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "contentType": {
            "location": "header", 
            "location_name": "Content-Type", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "name": {
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "uploadType": {
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "upload_id": {
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.insert.resume", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "shape_name": "Object", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.list": {
      "http": {
        "method": "GET", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o"
      }, 
      "input": {
        "members": {
          "bucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which to look for objects.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "delimiter": {
            "documentation": "\n        <p>\n        Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        A previously-returned page token representing part of the larger set of results to view.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "prefix": {
            "documentation": "\n        <p>\n        Filter results to objects whose names begin with this prefix.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "versions": {
            "documentation": "\n        <p>\n        If true, lists all versions of a file as distinct results.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Boolean", 
            "type": "boolean"
          }
        }
      }, 
      "name": "storage.objects.list", 
      "output": {
        "members": {
          "response": {
            "members": {
              "items": {
                "documentation": "\n        <p>\n        The list of items.        </p>\n    ", 
                "items": {
                  "members": {
                    "Object": {
                      "members": {
                        "acl": {
                          "annotations": {
                            "required": [
                              "storage.objects.update"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                          "items": {
                            "members": {
                              "ObjectAccessControl": {
                                "members": {
                                  "bucket": {
                                    "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "domain": {
                                    "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "email": {
                                    "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "entity": {
                                    "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "entityId": {
                                    "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "etag": {
                                    "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "generation": {
                                    "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                                    "format": "int64", 
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "kind": {
                                    "default": "storage#objectAccessControl", 
                                    "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "object": {
                                    "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "role": {
                                    "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                                    "type": "string"
                                  }, 
                                  "selfLink": {
                                    "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                                    "type": "string"
                                  }
                                }, 
                                "type": "structure"
                              }
                            }, 
                            "type": "structure"
                          }, 
                          "type": "list"
                        }, 
                        "bucket": {
                          "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "cacheControl": {
                          "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "componentCount": {
                          "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                          "format": "int32", 
                          "type": "integer"
                        }, 
                        "contentDisposition": {
                          "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "contentEncoding": {
                          "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "contentLanguage": {
                          "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "contentType": {
                          "annotations": {
                            "required": [
                              "storage.objects.update"
                            ], 
                            "type": "structure"
                          }, 
                          "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "crc32c": {
                          "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#object", 
                          "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "md5Hash": {
                          "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "mediaLink": {
                          "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "metadata": {
                          "additionalProperties": {
                            "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                            "type": "string"
                          }, 
                          "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                          "type": "structure"
                        }, 
                        "metageneration": {
                          "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "name": {
                          "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "owner": {
                          "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                          "properties": {
                            "entity": {
                              "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "entityId": {
                              "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                              "type": "string"
                            }, 
                            "type": "structure"
                          }, 
                          "type": "structure"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "size": {
                          "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                          "format": "uint64", 
                          "type": "string"
                        }, 
                        "timeDeleted": {
                          "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                          "format": "date-time", 
                          "type": "string"
                        }, 
                        "updated": {
                          "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                          "format": "date-time", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "kind": {
                "default": "storage#objects", 
                "documentation": "\n        <p>\n        The kind of item this is. For lists of objects, this is always storage#objects.        </p>\n    ", 
                "type": "string"
              }, 
              "nextPageToken": {
                "documentation": "\n        <p>\n        The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.        </p>\n    ", 
                "type": "string"
              }, 
              "prefixes": {
                "documentation": "\n        <p>\n        The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.        </p>\n    ", 
                "items": {
                  "type": "string"
                }, 
                "type": "list"
              }
            }, 
            "shape_name": "Objects", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_only", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.patch": {
      "http": {
        "method": "PATCH", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Object", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which the object resides.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to full.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.patch", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "shape_name": "Object", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.update": {
      "http": {
        "method": "PUT", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/{object}"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Object", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which the object resides.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "generation": {
            "documentation": "\n        <p>\n        If present, selects a specific revision of this object (as opposed to the latest version, the default).        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifGenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current generation does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration matches the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "ifMetagenerationNotMatch": {
            "documentation": "\n        <p>\n        Makes the operation conditional on whether the object's current metageneration does not match the given value.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "object": {
            "documentation": "\n        <p>\n        Name of the object.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to full.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }
        }
      }, 
      "name": "storage.objects.update", 
      "output": {
        "members": {
          "response": {
            "members": {
              "acl": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Access controls on the object.        </p>\n    ", 
                "items": {
                  "members": {
                    "ObjectAccessControl": {
                      "members": {
                        "bucket": {
                          "documentation": "\n        <p>\n        The name of the bucket.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "domain": {
                          "documentation": "\n        <p>\n        The domain associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "email": {
                          "documentation": "\n        <p>\n        The email address associated with the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entity": {
                          "documentation": "\n        <p>\n        The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- allUsers \n- allAuthenticatedUsers        </p>\n    ", 
                          "type": "string"
                        }, 
                        "entityId": {
                          "documentation": "\n        <p>\n        The ID for the entity, if any.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "etag": {
                          "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "generation": {
                          "documentation": "\n        <p>\n        The content generation of the object.        </p>\n    ", 
                          "format": "int64", 
                          "type": "string"
                        }, 
                        "id": {
                          "documentation": "\n        <p>\n        The ID of the access-control entry.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "kind": {
                          "default": "storage#objectAccessControl", 
                          "documentation": "\n        <p>\n        The kind of item this is. For object access control entries, this is always storage#objectAccessControl.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "object": {
                          "documentation": "\n        <p>\n        The name of the object.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "role": {
                          "documentation": "\n        <p>\n        The access permission for the entity. Can be READER or OWNER.        </p>\n    ", 
                          "type": "string"
                        }, 
                        "selfLink": {
                          "documentation": "\n        <p>\n        The link to this access-control entry.        </p>\n    ", 
                          "type": "string"
                        }
                      }, 
                      "type": "structure"
                    }
                  }, 
                  "type": "structure"
                }, 
                "type": "list"
              }, 
              "bucket": {
                "documentation": "\n        <p>\n        The bucket containing this object.        </p>\n    ", 
                "type": "string"
              }, 
              "cacheControl": {
                "documentation": "\n        <p>\n        Cache-Control directive for the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "componentCount": {
                "documentation": "\n        <p>\n        Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.        </p>\n    ", 
                "format": "int32", 
                "type": "integer"
              }, 
              "contentDisposition": {
                "documentation": "\n        <p>\n        Content-Disposition of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentEncoding": {
                "documentation": "\n        <p>\n        Content-Encoding of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentLanguage": {
                "documentation": "\n        <p>\n        Content-Language of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "contentType": {
                "annotations": {
                  "required": [
                    "storage.objects.update"
                  ], 
                  "type": "structure"
                }, 
                "documentation": "\n        <p>\n        Content-Type of the object data.        </p>\n    ", 
                "type": "string"
              }, 
              "crc32c": {
                "documentation": "\n        <p>\n        CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "etag": {
                "documentation": "\n        <p>\n        HTTP 1.1 Entity tag for the object.        </p>\n    ", 
                "type": "string"
              }, 
              "generation": {
                "documentation": "\n        <p>\n        The content generation of this object. Used for object versioning.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        The ID of the object.        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "storage#object", 
                "documentation": "\n        <p>\n        The kind of item this is. For objects, this is always storage#object.        </p>\n    ", 
                "type": "string"
              }, 
              "md5Hash": {
                "documentation": "\n        <p>\n        MD5 hash of the data; encoded using base64.        </p>\n    ", 
                "type": "string"
              }, 
              "mediaLink": {
                "documentation": "\n        <p>\n        Media download link.        </p>\n    ", 
                "type": "string"
              }, 
              "metadata": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        An individual metadata entry.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        User-provided metadata, in key/value pairs.        </p>\n    ", 
                "type": "structure"
              }, 
              "metageneration": {
                "documentation": "\n        <p>\n        The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "name": {
                "documentation": "\n        <p>\n        The name of this object. Required if not specified by URL parameter.        </p>\n    ", 
                "type": "string"
              }, 
              "owner": {
                "documentation": "\n        <p>\n        The owner of the object. This will always be the uploader of the object.        </p>\n    ", 
                "properties": {
                  "entity": {
                    "documentation": "\n        <p>\n        The entity, in the form user-userId.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "entityId": {
                    "documentation": "\n        <p>\n        The ID for the entity.        </p>\n    ", 
                    "type": "string"
                  }, 
                  "type": "structure"
                }, 
                "type": "structure"
              }, 
              "selfLink": {
                "documentation": "\n        <p>\n        The link to this object.        </p>\n    ", 
                "type": "string"
              }, 
              "size": {
                "documentation": "\n        <p>\n        Content-Length of the data in bytes.        </p>\n    ", 
                "format": "uint64", 
                "type": "string"
              }, 
              "timeDeleted": {
                "documentation": "\n        <p>\n        Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }, 
              "updated": {
                "documentation": "\n        <p>\n        Modification time of the object metadata in RFC 3339 format.        </p>\n    ", 
                "format": "date-time", 
                "type": "string"
              }
            }, 
            "shape_name": "Object", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }, 
    "storage.objects.watchAll": {
      "http": {
        "method": "POST", 
        "response_code": 201, 
        "uri": "storage/v1beta2/b/{bucket}/o/watch"
      }, 
      "input": {
        "members": {
          "body": {
            "location": "payload", 
            "members": {
              "address": {
                "documentation": "\n        <p>\n        The address of the receiving entity where events are delivered. Specific to the channel type.        </p>\n    ", 
                "type": "string"
              }, 
              "expiration": {
                "documentation": "\n        <p>\n        The expiration instant for this channel if it is defined.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        A UUID for the channel        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "api#channel", 
                "documentation": "\n        <p>\n        A channel watching an API resource        </p>\n    ", 
                "type": "string"
              }, 
              "params": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Declares a new parameter by name.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        Additional parameters controlling delivery channel behavior        </p>\n    ", 
                "type": "structure"
              }, 
              "resourceId": {
                "documentation": "\n        <p>\n        An opaque id that identifies the resource that is being watched. Stable across different API versions        </p>\n    ", 
                "type": "string"
              }, 
              "resourceUri": {
                "documentation": "\n        <p>\n        The canonicalized ID of the watched resource.        </p>\n    ", 
                "type": "string"
              }, 
              "token": {
                "documentation": "\n        <p>\n        An arbitrary string associated with the channel that is delivered to the target address with each event delivered over this channel.        </p>\n    ", 
                "type": "string"
              }, 
              "type": {
                "documentation": "\n        <p>\n        The type of delivery mechanism used by this channel        </p>\n    ", 
                "type": "string"
              }
            }, 
            "payload": true, 
            "required": true, 
            "shape_name": "Channel", 
            "type": "structure"
          }, 
          "bucket": {
            "documentation": "\n        <p>\n        Name of the bucket in which to look for objects.        </p>\n    ", 
            "location": "uri", 
            "required": true, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "delimiter": {
            "documentation": "\n        <p>\n        Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "maxResults": {
            "documentation": "\n        <p>\n        Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Integer", 
            "type": "integer"
          }, 
          "pageToken": {
            "documentation": "\n        <p>\n        A previously-returned page token representing part of the larger set of results to view.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "prefix": {
            "documentation": "\n        <p>\n        Filter results to objects whose names begin with this prefix.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "projection": {
            "documentation": "\n        <p>\n        Set of properties to return. Defaults to noAcl.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "String", 
            "type": "string"
          }, 
          "versions": {
            "documentation": "\n        <p>\n        If true, lists all versions of a file as distinct results.        </p>\n    ", 
            "location": "uri", 
            "required": false, 
            "shape_name": "Boolean", 
            "type": "boolean"
          }
        }
      }, 
      "name": "storage.objects.watchAll", 
      "output": {
        "members": {
          "response": {
            "members": {
              "address": {
                "documentation": "\n        <p>\n        The address of the receiving entity where events are delivered. Specific to the channel type.        </p>\n    ", 
                "type": "string"
              }, 
              "expiration": {
                "documentation": "\n        <p>\n        The expiration instant for this channel if it is defined.        </p>\n    ", 
                "format": "int64", 
                "type": "string"
              }, 
              "id": {
                "documentation": "\n        <p>\n        A UUID for the channel        </p>\n    ", 
                "type": "string"
              }, 
              "kind": {
                "default": "api#channel", 
                "documentation": "\n        <p>\n        A channel watching an API resource        </p>\n    ", 
                "type": "string"
              }, 
              "params": {
                "additionalProperties": {
                  "documentation": "\n        <p>\n        Declares a new parameter by name.        </p>\n    ", 
                  "type": "string"
                }, 
                "documentation": "\n        <p>\n        Additional parameters controlling delivery channel behavior        </p>\n    ", 
                "type": "structure"
              }, 
              "resourceId": {
                "documentation": "\n        <p>\n        An opaque id that identifies the resource that is being watched. Stable across different API versions        </p>\n    ", 
                "type": "string"
              }, 
              "resourceUri": {
                "documentation": "\n        <p>\n        The canonicalized ID of the watched resource.        </p>\n    ", 
                "type": "string"
              }, 
              "token": {
                "documentation": "\n        <p>\n        An arbitrary string associated with the channel that is delivered to the target address with each event delivered over this channel.        </p>\n    ", 
                "type": "string"
              }, 
              "type": {
                "documentation": "\n        <p>\n        The type of delivery mechanism used by this channel        </p>\n    ", 
                "type": "string"
              }
            }, 
            "shape_name": "Channel", 
            "type": "structure"
          }
        }
      }, 
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.full_control", 
        "https://www.googleapis.com/auth/devstorage.read_only", 
        "https://www.googleapis.com/auth/devstorage.read_write"
      ]
    }
  }, 
  "result_wrapped": false, 
  "service_abbreviation": "Cloud Storage API", 
  "service_full_name": "Lets you store and retrieve potentially-large, immutable data objects.", 
  "signature_version": "oauth2-gcp", 
  "type": "rest-json", 
  "xmlnamespace": "unknown"
}